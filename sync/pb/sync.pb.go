// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sync.proto

/*
Package syncpb is a generated protocol buffer package.

It is generated from these files:
	sync.proto

It has these top-level messages:
	FindBaseRequest
	FindBaseResponse
	BlockByHeightRequest
	BlockByHeightResponse
*/
package syncpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import corepb "github.com/medibloc/go-medibloc/core/pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type FindBaseRequest struct {
	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TargetHeight uint64 `protobuf:"varint,2,opt,name=target_height,json=targetHeight,proto3" json:"target_height,omitempty"`
	TryHeight    uint64 `protobuf:"varint,3,opt,name=try_height,json=tryHeight,proto3" json:"try_height,omitempty"`
	Timestamp    int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *FindBaseRequest) Reset()                    { *m = FindBaseRequest{} }
func (m *FindBaseRequest) String() string            { return proto.CompactTextString(m) }
func (*FindBaseRequest) ProtoMessage()               {}
func (*FindBaseRequest) Descriptor() ([]byte, []int) { return fileDescriptorSync, []int{0} }

func (m *FindBaseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FindBaseRequest) GetTargetHeight() uint64 {
	if m != nil {
		return m.TargetHeight
	}
	return 0
}

func (m *FindBaseRequest) GetTryHeight() uint64 {
	if m != nil {
		return m.TryHeight
	}
	return 0
}

func (m *FindBaseRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type FindBaseResponse struct {
	Status     bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TargetHash []byte `protobuf:"bytes,2,opt,name=target_hash,json=targetHash,proto3" json:"target_hash,omitempty"`
	TryHash    []byte `protobuf:"bytes,3,opt,name=try_hash,json=tryHash,proto3" json:"try_hash,omitempty"`
}

func (m *FindBaseResponse) Reset()                    { *m = FindBaseResponse{} }
func (m *FindBaseResponse) String() string            { return proto.CompactTextString(m) }
func (*FindBaseResponse) ProtoMessage()               {}
func (*FindBaseResponse) Descriptor() ([]byte, []int) { return fileDescriptorSync, []int{1} }

func (m *FindBaseResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *FindBaseResponse) GetTargetHash() []byte {
	if m != nil {
		return m.TargetHash
	}
	return nil
}

func (m *FindBaseResponse) GetTryHash() []byte {
	if m != nil {
		return m.TryHash
	}
	return nil
}

type BlockByHeightRequest struct {
	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TargetHeight uint64 `protobuf:"varint,2,opt,name=target_height,json=targetHeight,proto3" json:"target_height,omitempty"`
	BlockHeight  uint64 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Timestamp    int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *BlockByHeightRequest) Reset()                    { *m = BlockByHeightRequest{} }
func (m *BlockByHeightRequest) String() string            { return proto.CompactTextString(m) }
func (*BlockByHeightRequest) ProtoMessage()               {}
func (*BlockByHeightRequest) Descriptor() ([]byte, []int) { return fileDescriptorSync, []int{2} }

func (m *BlockByHeightRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BlockByHeightRequest) GetTargetHeight() uint64 {
	if m != nil {
		return m.TargetHeight
	}
	return 0
}

func (m *BlockByHeightRequest) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BlockByHeightRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type BlockByHeightResponse struct {
	Status     bool          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TargetHash []byte        `protobuf:"bytes,2,opt,name=target_hash,json=targetHash,proto3" json:"target_hash,omitempty"`
	BlockData  *corepb.Block `protobuf:"bytes,3,opt,name=block_data,json=blockData" json:"block_data,omitempty"`
}

func (m *BlockByHeightResponse) Reset()                    { *m = BlockByHeightResponse{} }
func (m *BlockByHeightResponse) String() string            { return proto.CompactTextString(m) }
func (*BlockByHeightResponse) ProtoMessage()               {}
func (*BlockByHeightResponse) Descriptor() ([]byte, []int) { return fileDescriptorSync, []int{3} }

func (m *BlockByHeightResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *BlockByHeightResponse) GetTargetHash() []byte {
	if m != nil {
		return m.TargetHash
	}
	return nil
}

func (m *BlockByHeightResponse) GetBlockData() *corepb.Block {
	if m != nil {
		return m.BlockData
	}
	return nil
}

func init() {
	proto.RegisterType((*FindBaseRequest)(nil), "syncpb.FindBaseRequest")
	proto.RegisterType((*FindBaseResponse)(nil), "syncpb.FindBaseResponse")
	proto.RegisterType((*BlockByHeightRequest)(nil), "syncpb.BlockByHeightRequest")
	proto.RegisterType((*BlockByHeightResponse)(nil), "syncpb.BlockByHeightResponse")
}

func init() { proto.RegisterFile("sync.proto", fileDescriptorSync) }

var fileDescriptorSync = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0xe5, 0xb6, 0xea, 0xdf, 0xdc, 0xb6, 0x3f, 0xc8, 0x02, 0x54, 0x10, 0x88, 0x52, 0x96,
	0x0e, 0x90, 0x48, 0xf4, 0x0d, 0x2a, 0x84, 0x98, 0xfd, 0x02, 0xc8, 0x4e, 0x4c, 0x6c, 0x41, 0x6a,
	0x13, 0xdf, 0x0e, 0x5d, 0x58, 0x58, 0x79, 0x68, 0xe4, 0x9b, 0x94, 0x0a, 0x26, 0xa4, 0x6e, 0xf7,
	0x9e, 0x73, 0xa2, 0x7c, 0xc7, 0x36, 0x40, 0xd8, 0xac, 0xf2, 0xd4, 0xd7, 0x0e, 0x1d, 0xef, 0xc7,
	0xd9, 0xab, 0xb3, 0x45, 0x69, 0xd1, 0xac, 0x55, 0x9a, 0xbb, 0x2a, 0xab, 0x74, 0x61, 0xd5, 0xab,
	0xcb, 0xb3, 0xd2, 0xdd, 0x7e, 0xcf, 0xb9, 0xab, 0x75, 0xe6, 0x55, 0x16, 0x97, 0x97, 0xe6, 0xe3,
	0xd9, 0x07, 0x83, 0x83, 0x07, 0xbb, 0x2a, 0x96, 0x32, 0x68, 0xa1, 0xdf, 0xd6, 0x3a, 0x20, 0xff,
	0x0f, 0x1d, 0x5b, 0x4c, 0xd8, 0x94, 0xcd, 0x13, 0xd1, 0xb1, 0x05, 0xbf, 0x86, 0x31, 0xca, 0xba,
	0xd4, 0xf8, 0x64, 0xb4, 0x2d, 0x0d, 0x4e, 0x3a, 0x53, 0x36, 0xef, 0x89, 0x51, 0x23, 0x3e, 0x92,
	0xc6, 0x2f, 0x00, 0xb0, 0xde, 0x6c, 0x13, 0x5d, 0x4a, 0x24, 0x58, 0x6f, 0x5a, 0xfb, 0x1c, 0x12,
	0xb4, 0x95, 0x0e, 0x28, 0x2b, 0x3f, 0xe9, 0x4d, 0xd9, 0xbc, 0x2b, 0x76, 0xc2, 0xec, 0x19, 0x0e,
	0x77, 0x10, 0xc1, 0xbb, 0x55, 0xd0, 0xfc, 0x04, 0xfa, 0x01, 0x25, 0xae, 0x03, 0x91, 0x0c, 0x44,
	0xbb, 0xf1, 0x4b, 0x18, 0x6e, 0x69, 0x64, 0x30, 0xc4, 0x32, 0x12, 0xd0, 0xb2, 0xc8, 0x60, 0xf8,
	0x29, 0x0c, 0x88, 0x24, 0xba, 0x5d, 0x72, 0xff, 0x45, 0x0e, 0x19, 0xcc, 0xec, 0x93, 0xc1, 0xd1,
	0x32, 0xb6, 0x5f, 0xb6, 0x5c, 0x7b, 0x55, 0xbe, 0x82, 0x11, 0x1d, 0xe5, 0xcf, 0xd2, 0x43, 0xd2,
	0xfe, 0x54, 0xfb, 0x1d, 0x8e, 0x7f, 0xd1, 0xec, 0xdb, 0xfd, 0x06, 0xa0, 0x41, 0x2a, 0x24, 0x4a,
	0x02, 0x1a, 0xde, 0x8d, 0xd3, 0x78, 0xf1, 0x5e, 0xa5, 0xf4, 0x2f, 0x91, 0x50, 0xe0, 0x5e, 0xa2,
	0x54, 0x7d, 0x7a, 0x03, 0x8b, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x2f, 0x19, 0xe9, 0x4e,
	0x02, 0x00, 0x00,
}
