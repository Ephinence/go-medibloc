// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: record.proto

package corepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Reader struct {
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	EncKey  []byte `protobuf:"bytes,2,opt,name=enc_key,json=encKey,proto3" json:"enc_key,omitempty"`
	Seed    []byte `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (m *Reader) Reset()                    { *m = Reader{} }
func (m *Reader) String() string            { return proto.CompactTextString(m) }
func (*Reader) ProtoMessage()               {}
func (*Reader) Descriptor() ([]byte, []int) { return fileDescriptorRecord, []int{0} }

func (m *Reader) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Reader) GetEncKey() []byte {
	if m != nil {
		return m.EncKey
	}
	return nil
}

func (m *Reader) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

type Record struct {
	Hash      []byte    `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Storage   string    `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`
	Owner     []byte    `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Timestamp int64     `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Readers   []*Reader `protobuf:"bytes,5,rep,name=readers" json:"readers,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptorRecord, []int{1} }

func (m *Record) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Record) GetStorage() string {
	if m != nil {
		return m.Storage
	}
	return ""
}

func (m *Record) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Record) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Record) GetReaders() []*Reader {
	if m != nil {
		return m.Readers
	}
	return nil
}

func init() {
	proto.RegisterType((*Reader)(nil), "corepb.Reader")
	proto.RegisterType((*Record)(nil), "corepb.Record")
}

func init() { proto.RegisterFile("record.proto", fileDescriptorRecord) }

var fileDescriptorRecord = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xc1, 0x4a, 0xc6, 0x30,
	0x10, 0x84, 0x89, 0xfd, 0x9b, 0xd2, 0xb5, 0x78, 0x58, 0x04, 0x73, 0xf0, 0x50, 0x7a, 0xca, 0xa9,
	0x07, 0x7d, 0x0c, 0x0f, 0x42, 0x5e, 0x40, 0xd2, 0x64, 0xb1, 0x22, 0x6d, 0xca, 0x26, 0x20, 0x7d,
	0x0f, 0x1f, 0x58, 0x92, 0xb6, 0x78, 0xdb, 0x99, 0x81, 0x6f, 0x76, 0xa0, 0x63, 0x72, 0x81, 0xfd,
	0xb8, 0x71, 0x48, 0x01, 0xa5, 0x0b, 0x4c, 0xdb, 0x34, 0xbc, 0x83, 0x34, 0x64, 0x3d, 0x31, 0x2a,
	0x68, 0xac, 0xf7, 0x4c, 0x31, 0x2a, 0xd1, 0x0b, 0xdd, 0x99, 0x4b, 0xe2, 0x13, 0x34, 0xb4, 0xba,
	0x8f, 0x6f, 0xda, 0xd5, 0x5d, 0x49, 0x24, 0xad, 0xee, 0x8d, 0x76, 0x44, 0xb8, 0x45, 0x22, 0xaf,
	0xaa, 0xe2, 0x96, 0x7b, 0xf8, 0x15, 0x99, 0x98, 0x9b, 0x72, 0x3c, 0xdb, 0x38, 0x9f, 0xb8, 0x72,
	0xe7, 0x96, 0x98, 0x02, 0xdb, 0x4f, 0x2a, 0xac, 0xd6, 0x5c, 0x12, 0x1f, 0xa1, 0x0e, 0x3f, 0x2b,
	0xf1, 0x49, 0x3b, 0x04, 0x3e, 0x43, 0x9b, 0xbe, 0x16, 0x8a, 0xc9, 0x2e, 0x9b, 0xba, 0xf5, 0x42,
	0x57, 0xe6, 0xdf, 0x40, 0x0d, 0x0d, 0x97, 0xef, 0xa3, 0xaa, 0xfb, 0x4a, 0xdf, 0xbf, 0x3c, 0x8c,
	0xc7, 0xae, 0xf1, 0x18, 0x65, 0xae, 0x78, 0x92, 0x65, 0xf6, 0xeb, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb7, 0x08, 0x35, 0x48, 0x06, 0x01, 0x00, 0x00,
}
