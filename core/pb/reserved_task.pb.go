// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: reserved_task.proto

package corepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReservedTask struct {
	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload   []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *ReservedTask) Reset()                    { *m = ReservedTask{} }
func (m *ReservedTask) String() string            { return proto.CompactTextString(m) }
func (*ReservedTask) ProtoMessage()               {}
func (*ReservedTask) Descriptor() ([]byte, []int) { return fileDescriptorReservedTask, []int{0} }

func (m *ReservedTask) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ReservedTask) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ReservedTask) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ReservedTasks struct {
	Tasks []*ReservedTask `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
}

func (m *ReservedTasks) Reset()                    { *m = ReservedTasks{} }
func (m *ReservedTasks) String() string            { return proto.CompactTextString(m) }
func (*ReservedTasks) ProtoMessage()               {}
func (*ReservedTasks) Descriptor() ([]byte, []int) { return fileDescriptorReservedTask, []int{1} }

func (m *ReservedTasks) GetTasks() []*ReservedTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*ReservedTask)(nil), "corepb.ReservedTask")
	proto.RegisterType((*ReservedTasks)(nil), "corepb.ReservedTasks")
}

func init() { proto.RegisterFile("reserved_task.proto", fileDescriptorReservedTask) }

var fileDescriptorReservedTask = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x4a, 0x2d, 0x4e,
	0x2d, 0x2a, 0x4b, 0x4d, 0x89, 0x2f, 0x49, 0x2c, 0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x4b, 0xce, 0x2f, 0x4a, 0x2d, 0x48, 0x52, 0x8a, 0xe2, 0xe2, 0x09, 0x82, 0x4a, 0x87, 0x24,
	0x16, 0x67, 0x0b, 0x09, 0x71, 0xb1, 0x94, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x81, 0xd9, 0x42, 0x12, 0x5c, 0xec, 0x05, 0x89, 0x95, 0x39, 0xf9, 0x89, 0x29, 0x12, 0x4c,
	0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x30, 0xae, 0x90, 0x0c, 0x17, 0x67, 0x49, 0x66, 0x6e, 0x6a, 0x71,
	0x49, 0x62, 0x6e, 0x81, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x42, 0x40, 0xc9, 0x9a, 0x8b,
	0x17, 0xd9, 0xec, 0x62, 0x21, 0x2d, 0x2e, 0x56, 0x90, 0x13, 0x8a, 0x25, 0x18, 0x15, 0x98, 0x35,
	0xb8, 0x8d, 0x44, 0xf4, 0x20, 0x8e, 0xd0, 0x43, 0x56, 0x15, 0x04, 0x51, 0x92, 0xc4, 0x06, 0x76,
	0xa7, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x8c, 0x0b, 0x9a, 0xbe, 0x00, 0x00, 0x00,
}
