// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: block.proto

package corepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type BlockHeader struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ParentHash           []byte   `protobuf:"bytes,2,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Coinbase             []byte   `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Reward               []byte   `protobuf:"bytes,4,opt,name=reward,proto3" json:"reward,omitempty"`
	Supply               []byte   `protobuf:"bytes,5,opt,name=supply,proto3" json:"supply,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ChainId              uint32   `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	HashAlg              uint32   `protobuf:"varint,10,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	CryptoAlg            uint32   `protobuf:"varint,11,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	Sign                 []byte   `protobuf:"bytes,12,opt,name=sign,proto3" json:"sign,omitempty"`
	AccStateRoot         []byte   `protobuf:"bytes,21,opt,name=acc_state_root,json=accStateRoot,proto3" json:"acc_state_root,omitempty"`
	TxStateRoot          []byte   `protobuf:"bytes,22,opt,name=tx_state_root,json=txStateRoot,proto3" json:"tx_state_root,omitempty"`
	DposRoot             []byte   `protobuf:"bytes,23,opt,name=dpos_root,json=dposRoot,proto3" json:"dpos_root,omitempty"`
	CpuPrice             []byte   `protobuf:"bytes,30,opt,name=cpu_price,json=cpuPrice,proto3" json:"cpu_price,omitempty"`
	CpuUsage             uint64   `protobuf:"varint,31,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	NetPrice             []byte   `protobuf:"bytes,32,opt,name=net_price,json=netPrice,proto3" json:"net_price,omitempty"`
	NetUsage             uint64   `protobuf:"varint,33,opt,name=net_usage,json=netUsage,proto3" json:"net_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{0}
}
func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (dst *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(dst, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockHeader) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *BlockHeader) GetCoinbase() []byte {
	if m != nil {
		return m.Coinbase
	}
	return nil
}

func (m *BlockHeader) GetReward() []byte {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *BlockHeader) GetSupply() []byte {
	if m != nil {
		return m.Supply
	}
	return nil
}

func (m *BlockHeader) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHeader) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *BlockHeader) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

func (m *BlockHeader) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *BlockHeader) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *BlockHeader) GetAccStateRoot() []byte {
	if m != nil {
		return m.AccStateRoot
	}
	return nil
}

func (m *BlockHeader) GetTxStateRoot() []byte {
	if m != nil {
		return m.TxStateRoot
	}
	return nil
}

func (m *BlockHeader) GetDposRoot() []byte {
	if m != nil {
		return m.DposRoot
	}
	return nil
}

func (m *BlockHeader) GetCpuPrice() []byte {
	if m != nil {
		return m.CpuPrice
	}
	return nil
}

func (m *BlockHeader) GetCpuUsage() uint64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *BlockHeader) GetNetPrice() []byte {
	if m != nil {
		return m.NetPrice
	}
	return nil
}

func (m *BlockHeader) GetNetUsage() uint64 {
	if m != nil {
		return m.NetUsage
	}
	return 0
}

type Block struct {
	Header               *BlockHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Transactions         []*Transaction `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	Height               uint64         `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{1}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Block) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type DownloadParentBlock struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Sign                 []byte   `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadParentBlock) Reset()         { *m = DownloadParentBlock{} }
func (m *DownloadParentBlock) String() string { return proto.CompactTextString(m) }
func (*DownloadParentBlock) ProtoMessage()    {}
func (*DownloadParentBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{2}
}
func (m *DownloadParentBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadParentBlock.Unmarshal(m, b)
}
func (m *DownloadParentBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadParentBlock.Marshal(b, m, deterministic)
}
func (dst *DownloadParentBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadParentBlock.Merge(dst, src)
}
func (m *DownloadParentBlock) XXX_Size() int {
	return xxx_messageInfo_DownloadParentBlock.Size(m)
}
func (m *DownloadParentBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadParentBlock.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadParentBlock proto.InternalMessageInfo

func (m *DownloadParentBlock) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *DownloadParentBlock) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type BlockHashTarget struct {
	ParentHash           []byte   `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Coinbase             []byte   `protobuf:"bytes,2,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	AccStateRoot         []byte   `protobuf:"bytes,3,opt,name=acc_state_root,json=accStateRoot,proto3" json:"acc_state_root,omitempty"`
	TxStateRoot          []byte   `protobuf:"bytes,4,opt,name=tx_state_root,json=txStateRoot,proto3" json:"tx_state_root,omitempty"`
	DposRoot             []byte   `protobuf:"bytes,5,opt,name=dpos_root,json=dposRoot,proto3" json:"dpos_root,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ChainId              uint32   `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Reward               []byte   `protobuf:"bytes,8,opt,name=reward,proto3" json:"reward,omitempty"`
	Supply               []byte   `protobuf:"bytes,9,opt,name=supply,proto3" json:"supply,omitempty"`
	HashAlg              uint32   `protobuf:"varint,10,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	CryptoAlg            uint32   `protobuf:"varint,11,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	CpuPrice             []byte   `protobuf:"bytes,30,opt,name=cpu_price,json=cpuPrice,proto3" json:"cpu_price,omitempty"`
	CpuUsage             uint64   `protobuf:"varint,31,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	NetPrice             []byte   `protobuf:"bytes,32,opt,name=net_price,json=netPrice,proto3" json:"net_price,omitempty"`
	NetUsage             uint64   `protobuf:"varint,33,opt,name=net_usage,json=netUsage,proto3" json:"net_usage,omitempty"`
	TxHash               [][]byte `protobuf:"bytes,40,rep,name=tx_hash,json=txHash" json:"tx_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHashTarget) Reset()         { *m = BlockHashTarget{} }
func (m *BlockHashTarget) String() string { return proto.CompactTextString(m) }
func (*BlockHashTarget) ProtoMessage()    {}
func (*BlockHashTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{3}
}
func (m *BlockHashTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHashTarget.Unmarshal(m, b)
}
func (m *BlockHashTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHashTarget.Marshal(b, m, deterministic)
}
func (dst *BlockHashTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHashTarget.Merge(dst, src)
}
func (m *BlockHashTarget) XXX_Size() int {
	return xxx_messageInfo_BlockHashTarget.Size(m)
}
func (m *BlockHashTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHashTarget.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHashTarget proto.InternalMessageInfo

func (m *BlockHashTarget) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *BlockHashTarget) GetCoinbase() []byte {
	if m != nil {
		return m.Coinbase
	}
	return nil
}

func (m *BlockHashTarget) GetAccStateRoot() []byte {
	if m != nil {
		return m.AccStateRoot
	}
	return nil
}

func (m *BlockHashTarget) GetTxStateRoot() []byte {
	if m != nil {
		return m.TxStateRoot
	}
	return nil
}

func (m *BlockHashTarget) GetDposRoot() []byte {
	if m != nil {
		return m.DposRoot
	}
	return nil
}

func (m *BlockHashTarget) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHashTarget) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *BlockHashTarget) GetReward() []byte {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *BlockHashTarget) GetSupply() []byte {
	if m != nil {
		return m.Supply
	}
	return nil
}

func (m *BlockHashTarget) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

func (m *BlockHashTarget) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *BlockHashTarget) GetCpuPrice() []byte {
	if m != nil {
		return m.CpuPrice
	}
	return nil
}

func (m *BlockHashTarget) GetCpuUsage() uint64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *BlockHashTarget) GetNetPrice() []byte {
	if m != nil {
		return m.NetPrice
	}
	return nil
}

func (m *BlockHashTarget) GetNetUsage() uint64 {
	if m != nil {
		return m.NetUsage
	}
	return 0
}

func (m *BlockHashTarget) GetTxHash() [][]byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

type Transaction struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	TxType               string   `protobuf:"bytes,2,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	To                   []byte   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce                uint64   `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ChainId              uint32   `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	NonceCounter         uint64   `protobuf:"varint,8,opt,name=nonce_counter,json=nonceCounter,proto3" json:"nonce_counter,omitempty"`
	Payload              []byte   `protobuf:"bytes,10,opt,name=payload,proto3" json:"payload,omitempty"`
	HashAlg              uint32   `protobuf:"varint,20,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	CryptoAlg            uint32   `protobuf:"varint,21,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	Sign                 []byte   `protobuf:"bytes,22,opt,name=sign,proto3" json:"sign,omitempty"`
	PayerSign            []byte   `protobuf:"bytes,23,opt,name=payerSign,proto3" json:"payerSign,omitempty"`
	Receipt              *Receipt `protobuf:"bytes,30,opt,name=receipt" json:"receipt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{4}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *Transaction) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Transaction) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *Transaction) GetNonceCounter() uint64 {
	if m != nil {
		return m.NonceCounter
	}
	return 0
}

func (m *Transaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Transaction) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

func (m *Transaction) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *Transaction) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Transaction) GetPayerSign() []byte {
	if m != nil {
		return m.PayerSign
	}
	return nil
}

func (m *Transaction) GetReceipt() *Receipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

type Receipt struct {
	Executed             bool     `protobuf:"varint,1,opt,name=executed,proto3" json:"executed,omitempty"`
	CpuUsage             uint64   `protobuf:"varint,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	NetUsage             uint64   `protobuf:"varint,3,opt,name=net_usage,json=netUsage,proto3" json:"net_usage,omitempty"`
	Points               []byte   `protobuf:"bytes,4,opt,name=points,proto3" json:"points,omitempty"`
	Error                []byte   `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Receipt) Reset()         { *m = Receipt{} }
func (m *Receipt) String() string { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()    {}
func (*Receipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{5}
}
func (m *Receipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receipt.Unmarshal(m, b)
}
func (m *Receipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receipt.Marshal(b, m, deterministic)
}
func (dst *Receipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receipt.Merge(dst, src)
}
func (m *Receipt) XXX_Size() int {
	return xxx_messageInfo_Receipt.Size(m)
}
func (m *Receipt) XXX_DiscardUnknown() {
	xxx_messageInfo_Receipt.DiscardUnknown(m)
}

var xxx_messageInfo_Receipt proto.InternalMessageInfo

func (m *Receipt) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *Receipt) GetCpuUsage() uint64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *Receipt) GetNetUsage() uint64 {
	if m != nil {
		return m.NetUsage
	}
	return 0
}

func (m *Receipt) GetPoints() []byte {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *Receipt) GetError() []byte {
	if m != nil {
		return m.Error
	}
	return nil
}

type TransactionHashTarget struct {
	TxType               string   `protobuf:"bytes,1,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	From                 []byte   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   []byte   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce                uint64   `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ChainId              uint32   `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Payload              []byte   `protobuf:"bytes,10,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionHashTarget) Reset()         { *m = TransactionHashTarget{} }
func (m *TransactionHashTarget) String() string { return proto.CompactTextString(m) }
func (*TransactionHashTarget) ProtoMessage()    {}
func (*TransactionHashTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{6}
}
func (m *TransactionHashTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionHashTarget.Unmarshal(m, b)
}
func (m *TransactionHashTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionHashTarget.Marshal(b, m, deterministic)
}
func (dst *TransactionHashTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionHashTarget.Merge(dst, src)
}
func (m *TransactionHashTarget) XXX_Size() int {
	return xxx_messageInfo_TransactionHashTarget.Size(m)
}
func (m *TransactionHashTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionHashTarget.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionHashTarget proto.InternalMessageInfo

func (m *TransactionHashTarget) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *TransactionHashTarget) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransactionHashTarget) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TransactionHashTarget) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TransactionHashTarget) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TransactionHashTarget) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionHashTarget) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *TransactionHashTarget) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type TransactionPayerSignTarget struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Sign                 []byte   `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionPayerSignTarget) Reset()         { *m = TransactionPayerSignTarget{} }
func (m *TransactionPayerSignTarget) String() string { return proto.CompactTextString(m) }
func (*TransactionPayerSignTarget) ProtoMessage()    {}
func (*TransactionPayerSignTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{7}
}
func (m *TransactionPayerSignTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionPayerSignTarget.Unmarshal(m, b)
}
func (m *TransactionPayerSignTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionPayerSignTarget.Marshal(b, m, deterministic)
}
func (dst *TransactionPayerSignTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionPayerSignTarget.Merge(dst, src)
}
func (m *TransactionPayerSignTarget) XXX_Size() int {
	return xxx_messageInfo_TransactionPayerSignTarget.Size(m)
}
func (m *TransactionPayerSignTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionPayerSignTarget.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionPayerSignTarget proto.InternalMessageInfo

func (m *TransactionPayerSignTarget) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *TransactionPayerSignTarget) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type DefaultPayload struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultPayload) Reset()         { *m = DefaultPayload{} }
func (m *DefaultPayload) String() string { return proto.CompactTextString(m) }
func (*DefaultPayload) ProtoMessage()    {}
func (*DefaultPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{8}
}
func (m *DefaultPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultPayload.Unmarshal(m, b)
}
func (m *DefaultPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultPayload.Marshal(b, m, deterministic)
}
func (dst *DefaultPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultPayload.Merge(dst, src)
}
func (m *DefaultPayload) XXX_Size() int {
	return xxx_messageInfo_DefaultPayload.Size(m)
}
func (m *DefaultPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultPayload.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultPayload proto.InternalMessageInfo

func (m *DefaultPayload) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddCertificationPayload struct {
	IssueTime            int64    `protobuf:"varint,1,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
	ExpirationTime       int64    `protobuf:"varint,2,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Hash                 []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCertificationPayload) Reset()         { *m = AddCertificationPayload{} }
func (m *AddCertificationPayload) String() string { return proto.CompactTextString(m) }
func (*AddCertificationPayload) ProtoMessage()    {}
func (*AddCertificationPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{9}
}
func (m *AddCertificationPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCertificationPayload.Unmarshal(m, b)
}
func (m *AddCertificationPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCertificationPayload.Marshal(b, m, deterministic)
}
func (dst *AddCertificationPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCertificationPayload.Merge(dst, src)
}
func (m *AddCertificationPayload) XXX_Size() int {
	return xxx_messageInfo_AddCertificationPayload.Size(m)
}
func (m *AddCertificationPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCertificationPayload.DiscardUnknown(m)
}

var xxx_messageInfo_AddCertificationPayload proto.InternalMessageInfo

func (m *AddCertificationPayload) GetIssueTime() int64 {
	if m != nil {
		return m.IssueTime
	}
	return 0
}

func (m *AddCertificationPayload) GetExpirationTime() int64 {
	if m != nil {
		return m.ExpirationTime
	}
	return 0
}

func (m *AddCertificationPayload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type RevokeCertificationPayload struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeCertificationPayload) Reset()         { *m = RevokeCertificationPayload{} }
func (m *RevokeCertificationPayload) String() string { return proto.CompactTextString(m) }
func (*RevokeCertificationPayload) ProtoMessage()    {}
func (*RevokeCertificationPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{10}
}
func (m *RevokeCertificationPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeCertificationPayload.Unmarshal(m, b)
}
func (m *RevokeCertificationPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeCertificationPayload.Marshal(b, m, deterministic)
}
func (dst *RevokeCertificationPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeCertificationPayload.Merge(dst, src)
}
func (m *RevokeCertificationPayload) XXX_Size() int {
	return xxx_messageInfo_RevokeCertificationPayload.Size(m)
}
func (m *RevokeCertificationPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeCertificationPayload.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeCertificationPayload proto.InternalMessageInfo

func (m *RevokeCertificationPayload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type AddRecordPayload struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRecordPayload) Reset()         { *m = AddRecordPayload{} }
func (m *AddRecordPayload) String() string { return proto.CompactTextString(m) }
func (*AddRecordPayload) ProtoMessage()    {}
func (*AddRecordPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{11}
}
func (m *AddRecordPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRecordPayload.Unmarshal(m, b)
}
func (m *AddRecordPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRecordPayload.Marshal(b, m, deterministic)
}
func (dst *AddRecordPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRecordPayload.Merge(dst, src)
}
func (m *AddRecordPayload) XXX_Size() int {
	return xxx_messageInfo_AddRecordPayload.Size(m)
}
func (m *AddRecordPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRecordPayload.DiscardUnknown(m)
}

var xxx_messageInfo_AddRecordPayload proto.InternalMessageInfo

func (m *AddRecordPayload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type RegisterAliasPayload struct {
	AliasName            string   `protobuf:"bytes,1,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterAliasPayload) Reset()         { *m = RegisterAliasPayload{} }
func (m *RegisterAliasPayload) String() string { return proto.CompactTextString(m) }
func (*RegisterAliasPayload) ProtoMessage()    {}
func (*RegisterAliasPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{12}
}
func (m *RegisterAliasPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterAliasPayload.Unmarshal(m, b)
}
func (m *RegisterAliasPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterAliasPayload.Marshal(b, m, deterministic)
}
func (dst *RegisterAliasPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterAliasPayload.Merge(dst, src)
}
func (m *RegisterAliasPayload) XXX_Size() int {
	return xxx_messageInfo_RegisterAliasPayload.Size(m)
}
func (m *RegisterAliasPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterAliasPayload.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterAliasPayload proto.InternalMessageInfo

func (m *RegisterAliasPayload) GetAliasName() string {
	if m != nil {
		return m.AliasName
	}
	return ""
}

type Genesis struct {
	// genesis meta
	Meta *GenesisMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	// genesis token distribution address
	TokenDistribution []*GenesisTokenDistribution `protobuf:"bytes,2,rep,name=token_distribution,json=tokenDistribution" json:"token_distribution,omitempty"`
	// genesis transactions
	Transactions         []*Transaction `protobuf:"bytes,3,rep,name=transactions" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Genesis) Reset()         { *m = Genesis{} }
func (m *Genesis) String() string { return proto.CompactTextString(m) }
func (*Genesis) ProtoMessage()    {}
func (*Genesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{13}
}
func (m *Genesis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Genesis.Unmarshal(m, b)
}
func (m *Genesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Genesis.Marshal(b, m, deterministic)
}
func (dst *Genesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Genesis.Merge(dst, src)
}
func (m *Genesis) XXX_Size() int {
	return xxx_messageInfo_Genesis.Size(m)
}
func (m *Genesis) XXX_DiscardUnknown() {
	xxx_messageInfo_Genesis.DiscardUnknown(m)
}

var xxx_messageInfo_Genesis proto.InternalMessageInfo

func (m *Genesis) GetMeta() *GenesisMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Genesis) GetTokenDistribution() []*GenesisTokenDistribution {
	if m != nil {
		return m.TokenDistribution
	}
	return nil
}

func (m *Genesis) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GenesisMeta struct {
	// ChainID.
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Dynasty size.
	DynastySize          uint32   `protobuf:"varint,2,opt,name=dynasty_size,json=dynastySize,proto3" json:"dynasty_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenesisMeta) Reset()         { *m = GenesisMeta{} }
func (m *GenesisMeta) String() string { return proto.CompactTextString(m) }
func (*GenesisMeta) ProtoMessage()    {}
func (*GenesisMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{14}
}
func (m *GenesisMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisMeta.Unmarshal(m, b)
}
func (m *GenesisMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisMeta.Marshal(b, m, deterministic)
}
func (dst *GenesisMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisMeta.Merge(dst, src)
}
func (m *GenesisMeta) XXX_Size() int {
	return xxx_messageInfo_GenesisMeta.Size(m)
}
func (m *GenesisMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisMeta.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisMeta proto.InternalMessageInfo

func (m *GenesisMeta) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GenesisMeta) GetDynastySize() uint32 {
	if m != nil {
		return m.DynastySize
	}
	return 0
}

type GenesisTokenDistribution struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenesisTokenDistribution) Reset()         { *m = GenesisTokenDistribution{} }
func (m *GenesisTokenDistribution) String() string { return proto.CompactTextString(m) }
func (*GenesisTokenDistribution) ProtoMessage()    {}
func (*GenesisTokenDistribution) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_e85517027cd145ce, []int{15}
}
func (m *GenesisTokenDistribution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisTokenDistribution.Unmarshal(m, b)
}
func (m *GenesisTokenDistribution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisTokenDistribution.Marshal(b, m, deterministic)
}
func (dst *GenesisTokenDistribution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisTokenDistribution.Merge(dst, src)
}
func (m *GenesisTokenDistribution) XXX_Size() int {
	return xxx_messageInfo_GenesisTokenDistribution.Size(m)
}
func (m *GenesisTokenDistribution) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisTokenDistribution.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisTokenDistribution proto.InternalMessageInfo

func (m *GenesisTokenDistribution) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GenesisTokenDistribution) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func init() {
	proto.RegisterType((*BlockHeader)(nil), "corepb.BlockHeader")
	proto.RegisterType((*Block)(nil), "corepb.Block")
	proto.RegisterType((*DownloadParentBlock)(nil), "corepb.DownloadParentBlock")
	proto.RegisterType((*BlockHashTarget)(nil), "corepb.BlockHashTarget")
	proto.RegisterType((*Transaction)(nil), "corepb.Transaction")
	proto.RegisterType((*Receipt)(nil), "corepb.Receipt")
	proto.RegisterType((*TransactionHashTarget)(nil), "corepb.TransactionHashTarget")
	proto.RegisterType((*TransactionPayerSignTarget)(nil), "corepb.TransactionPayerSignTarget")
	proto.RegisterType((*DefaultPayload)(nil), "corepb.DefaultPayload")
	proto.RegisterType((*AddCertificationPayload)(nil), "corepb.AddCertificationPayload")
	proto.RegisterType((*RevokeCertificationPayload)(nil), "corepb.RevokeCertificationPayload")
	proto.RegisterType((*AddRecordPayload)(nil), "corepb.AddRecordPayload")
	proto.RegisterType((*RegisterAliasPayload)(nil), "corepb.RegisterAliasPayload")
	proto.RegisterType((*Genesis)(nil), "corepb.Genesis")
	proto.RegisterType((*GenesisMeta)(nil), "corepb.GenesisMeta")
	proto.RegisterType((*GenesisTokenDistribution)(nil), "corepb.GenesisTokenDistribution")
}

func init() { proto.RegisterFile("block.proto", fileDescriptor_block_e85517027cd145ce) }

var fileDescriptor_block_e85517027cd145ce = []byte{
	// 1005 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0x85, 0x2c, 0xd9, 0x8e, 0xaf, 0x9c, 0x64, 0x63, 0xf3, 0xa1, 0x65, 0xed, 0xea, 0x6a, 0x1f,
	0xcd, 0x36, 0x20, 0x18, 0xba, 0x0d, 0x7b, 0xda, 0x43, 0x3e, 0x80, 0x75, 0x18, 0xd6, 0x05, 0x4c,
	0xf6, 0x2c, 0xd0, 0xd2, 0x8d, 0xcd, 0xc5, 0x16, 0x05, 0x92, 0x6a, 0xed, 0xbe, 0xf7, 0x71, 0xff,
	0x68, 0xff, 0x62, 0xbf, 0x61, 0xef, 0xfb, 0x09, 0x03, 0x49, 0x29, 0x96, 0x5d, 0x27, 0x0b, 0xfa,
	0xd2, 0x37, 0x9d, 0x73, 0xee, 0x85, 0x79, 0x79, 0x0e, 0x49, 0x43, 0x38, 0x9c, 0x88, 0xf4, 0xfa,
	0xa8, 0x90, 0x42, 0x0b, 0xd2, 0x49, 0x85, 0xc4, 0x62, 0x18, 0xff, 0xeb, 0x43, 0x78, 0x62, 0xf8,
	0xe7, 0xc8, 0x32, 0x94, 0x84, 0x40, 0x30, 0x66, 0x6a, 0x1c, 0x79, 0x03, 0xef, 0xb0, 0x4f, 0xed,
	0x37, 0x79, 0x0c, 0x61, 0xc1, 0x24, 0xe6, 0x3a, 0xb1, 0x52, 0xcb, 0x4a, 0xe0, 0xa8, 0xe7, 0xa6,
	0xe0, 0x00, 0x36, 0x52, 0xc1, 0xf3, 0x21, 0x53, 0x18, 0xf9, 0x56, 0xbd, 0xc1, 0x64, 0x0f, 0x3a,
	0x12, 0x5f, 0x31, 0x99, 0x45, 0x81, 0x55, 0x2a, 0x64, 0x78, 0x55, 0x16, 0xc5, 0x64, 0x1e, 0xb5,
	0x1d, 0xef, 0x10, 0x79, 0x08, 0x3d, 0xcd, 0xa7, 0xa8, 0x34, 0x9b, 0x16, 0x51, 0x67, 0xe0, 0x1d,
	0xfa, 0x74, 0x41, 0x90, 0x8f, 0x60, 0x23, 0x1d, 0x33, 0x9e, 0x27, 0x3c, 0x8b, 0xba, 0x03, 0xef,
	0x70, 0x93, 0x76, 0x2d, 0xfe, 0x39, 0x33, 0x92, 0x59, 0x5e, 0xc2, 0x26, 0xa3, 0x08, 0x9c, 0x64,
	0xf0, 0xf1, 0x64, 0x44, 0x1e, 0x01, 0xa4, 0x72, 0x5e, 0x68, 0x61, 0xc5, 0xd0, 0x8a, 0x3d, 0xc7,
	0x18, 0x99, 0x40, 0xa0, 0xf8, 0x28, 0x8f, 0xfa, 0x6e, 0x66, 0xf3, 0x4d, 0x3e, 0x83, 0x2d, 0x96,
	0xa6, 0x89, 0xd2, 0x4c, 0x63, 0x22, 0x85, 0xd0, 0xd1, 0xae, 0x55, 0xfb, 0x2c, 0x4d, 0x2f, 0x0c,
	0x49, 0x85, 0xd0, 0x24, 0x86, 0x4d, 0x3d, 0x6b, 0x16, 0xed, 0xd9, 0xa2, 0x50, 0xcf, 0x16, 0x35,
	0x1f, 0x43, 0x2f, 0x2b, 0x84, 0x72, 0xfa, 0xbe, 0xdb, 0x1d, 0x43, 0xd4, 0x62, 0x5a, 0x94, 0x49,
	0x21, 0x79, 0x8a, 0xd1, 0x27, 0xd5, 0xd6, 0x15, 0xe5, 0xb9, 0xc1, 0xb5, 0x58, 0x2a, 0x36, 0xc2,
	0xe8, 0xf1, 0xc0, 0x3b, 0x0c, 0xac, 0xf8, 0xbb, 0xc1, 0x46, 0xcc, 0x51, 0x57, 0x9d, 0x03, 0xd7,
	0x99, 0xa3, 0xbe, 0xe9, 0x34, 0xa2, 0xeb, 0x7c, 0xe2, 0x3a, 0x73, 0xd4, 0xb6, 0x33, 0x7e, 0xe3,
	0x41, 0xdb, 0x5a, 0x4e, 0xbe, 0x86, 0xce, 0xd8, 0xda, 0x6e, 0xed, 0x0e, 0x9f, 0x3d, 0x38, 0x72,
	0xa9, 0x38, 0x6a, 0x24, 0x82, 0x56, 0x25, 0xe4, 0x07, 0xe8, 0x6b, 0xc9, 0x72, 0xc5, 0x52, 0xcd,
	0x45, 0xae, 0xa2, 0xd6, 0xc0, 0x6f, 0xb6, 0x5c, 0x2e, 0x34, 0xba, 0x54, 0x68, 0x9c, 0x1e, 0x23,
	0x1f, 0x8d, 0xb5, 0xcd, 0x46, 0x40, 0x2b, 0x14, 0xff, 0x08, 0x0f, 0xce, 0xc4, 0xab, 0x7c, 0x22,
	0x58, 0x76, 0x6e, 0xb3, 0xe4, 0x16, 0xb5, 0x2e, 0x81, 0xb5, 0x43, 0xad, 0x85, 0x43, 0xf1, 0x3f,
	0x3e, 0x6c, 0xbb, 0x75, 0x32, 0x35, 0xbe, 0x64, 0x72, 0x84, 0x7a, 0x35, 0xa9, 0xde, 0x9d, 0x49,
	0x6d, 0xad, 0x24, 0xf5, 0x6d, 0xcb, 0xfd, 0xfb, 0x58, 0x1e, 0xfc, 0x8f, 0xe5, 0xed, 0x15, 0xcb,
	0xdf, 0x39, 0xe0, 0x8b, 0x93, 0xb4, 0x71, 0xcb, 0x49, 0xea, 0x2d, 0x9d, 0xa4, 0x77, 0x3f, 0x10,
	0xef, 0x21, 0x95, 0x64, 0x1f, 0xba, 0x7a, 0xe6, 0x6c, 0x3b, 0x1c, 0xf8, 0x66, 0x0c, 0x3d, 0x33,
	0x96, 0xc5, 0x6f, 0x7c, 0x08, 0x1b, 0xe1, 0x5a, 0x9b, 0x0f, 0xd7, 0xac, 0xe7, 0x85, 0x73, 0xb5,
	0x67, 0x9a, 0x2f, 0xe7, 0x05, 0x92, 0x2d, 0x68, 0x69, 0x51, 0xf9, 0xd8, 0xd2, 0x82, 0xec, 0x40,
	0xfb, 0x25, 0x9b, 0x94, 0x58, 0xb9, 0xe6, 0xc0, 0xb2, 0x25, 0xed, 0x55, 0x4b, 0x76, 0xa0, 0x9d,
	0x8b, 0x3c, 0x45, 0x6b, 0x56, 0x40, 0x1d, 0xb8, 0xcb, 0xa8, 0x4f, 0x61, 0xd3, 0xd6, 0x24, 0xa9,
	0x28, 0x73, 0x8d, 0xd2, 0xfa, 0x15, 0xd0, 0xbe, 0x25, 0x4f, 0x1d, 0x47, 0x22, 0xe8, 0x16, 0x6c,
	0x6e, 0xc2, 0x6f, 0xcd, 0xe9, 0xd3, 0x1a, 0x2e, 0xf9, 0xb6, 0x73, 0x97, 0x6f, 0xbb, 0xb7, 0x5d,
	0x64, 0x7b, 0x8d, 0x8b, 0xec, 0x21, 0xf4, 0x0a, 0x36, 0x47, 0x79, 0x61, 0x04, 0x77, 0xfd, 0x2c,
	0x08, 0xf2, 0x25, 0x74, 0x25, 0xa6, 0xc8, 0x0b, 0x6d, 0x7d, 0x0e, 0x9f, 0x6d, 0xd7, 0xe7, 0x99,
	0x3a, 0x9a, 0xd6, 0x7a, 0xfc, 0xa7, 0x07, 0xdd, 0x8a, 0x34, 0xc7, 0x08, 0x67, 0x98, 0x96, 0x1a,
	0x33, 0xeb, 0xc3, 0x06, 0xbd, 0xc1, 0xcb, 0xf9, 0x68, 0xad, 0xcf, 0x87, 0x13, 0xfd, 0x95, 0x08,
	0xec, 0x41, 0xa7, 0x10, 0x3c, 0xd7, 0xaa, 0x7e, 0x2a, 0x1c, 0x32, 0x06, 0xa0, 0x94, 0x42, 0x56,
	0x47, 0xc9, 0x81, 0xf8, 0x6f, 0x0f, 0x76, 0x1b, 0xb9, 0x68, 0xdc, 0x02, 0x8d, 0x34, 0x78, 0x4b,
	0x69, 0x20, 0x10, 0x5c, 0x49, 0x31, 0xad, 0xaf, 0x11, 0xf3, 0xfd, 0x7e, 0x12, 0x72, 0xab, 0xf9,
	0xf1, 0x19, 0x1c, 0x34, 0x86, 0x3a, 0xaf, 0x8d, 0xaa, 0x26, 0xbb, 0xef, 0xdd, 0xf8, 0x15, 0x6c,
	0x9d, 0xe1, 0x15, 0x2b, 0x27, 0xfa, 0xbc, 0x0a, 0x55, 0x04, 0xdd, 0x29, 0x2a, 0xbb, 0xed, 0x6e,
	0x4f, 0x6a, 0x18, 0x97, 0xb0, 0x7f, 0x9c, 0x65, 0xa7, 0x28, 0x35, 0xbf, 0xe2, 0x29, 0xab, 0x7e,
	0xd6, 0x36, 0x3d, 0x02, 0xe0, 0x4a, 0x95, 0x98, 0x98, 0x51, 0x6d, 0x9f, 0x4f, 0x7b, 0x96, 0xb9,
	0xe4, 0x53, 0x24, 0x4f, 0x61, 0x1b, 0x67, 0x05, 0x97, 0xb6, 0xc7, 0xd5, 0xb4, 0x6c, 0xcd, 0xd6,
	0x82, 0xb6, 0x85, 0xf5, 0xb2, 0xfd, 0xc5, 0xb2, 0xe3, 0x6f, 0xe0, 0x80, 0xe2, 0x4b, 0x71, 0x8d,
	0x6b, 0x7f, 0x79, 0xcd, 0xa0, 0xf1, 0x17, 0xf0, 0xc1, 0x71, 0x96, 0x51, 0x4c, 0x85, 0xcc, 0xee,
	0xaa, 0xfb, 0x1e, 0x76, 0x28, 0x8e, 0xb8, 0xd2, 0x28, 0x8f, 0x27, 0x9c, 0xa9, 0xc6, 0x34, 0xcc,
	0xe0, 0x24, 0x67, 0xd3, 0x7a, 0x17, 0x7a, 0x96, 0x79, 0xc1, 0xa6, 0x18, 0xff, 0xe5, 0x41, 0xf7,
	0x27, 0xcc, 0x51, 0x71, 0x45, 0x9e, 0x42, 0x30, 0x45, 0xcd, 0x56, 0x9f, 0xc5, 0x4a, 0xfe, 0x15,
	0x35, 0xa3, 0xb6, 0x80, 0xfc, 0x06, 0x44, 0x8b, 0x6b, 0xcc, 0x93, 0x8c, 0x2b, 0x2d, 0xf9, 0xb0,
	0x34, 0x43, 0x54, 0x4f, 0xe3, 0x60, 0xa5, 0xed, 0xd2, 0x14, 0x9e, 0x35, 0xea, 0xe8, 0x87, 0x7a,
	0x95, 0x7a, 0xeb, 0x95, 0xf5, 0xef, 0xf9, 0xca, 0xc6, 0xbf, 0x40, 0xd8, 0x58, 0xde, 0x52, 0xf8,
	0xbc, 0xe5, 0xf0, 0x3d, 0x81, 0x7e, 0x36, 0xcf, 0x99, 0xd2, 0xf3, 0x44, 0xf1, 0xd7, 0xce, 0xb3,
	0x4d, 0x1a, 0x56, 0xdc, 0x05, 0x7f, 0x8d, 0xf1, 0x0b, 0x88, 0x6e, 0x5b, 0xb4, 0x49, 0x12, 0xcb,
	0x32, 0x89, 0x4a, 0xd5, 0x49, 0xaa, 0xa0, 0x51, 0x86, 0x6c, 0xc2, 0xcc, 0x41, 0x70, 0xb7, 0x70,
	0x0d, 0x4f, 0x3e, 0x87, 0x7d, 0x21, 0x47, 0x47, 0x53, 0xcc, 0xbe, 0xfb, 0xc3, 0x8e, 0xe2, 0xfe,
	0x85, 0x0e, 0xcb, 0xab, 0x13, 0xb0, 0x6f, 0xf8, 0xa9, 0x59, 0xdb, 0xb0, 0x63, 0xd9, 0x6f, 0xff,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x4d, 0xf1, 0x0e, 0xaa, 0x0a, 0x00, 0x00,
}
