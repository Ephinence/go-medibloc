// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: genesis.proto

/*
Package corepb is a generated protocol buffer package.

It is generated from these files:
	genesis.proto

It has these top-level messages:
	Genesis
	GenesisMeta
	GenesisConsensus
	GenesisConsensusDpos
	GenesisTokenDistribution
*/
package corepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Genesis struct {
	// genesis meta
	Meta *GenesisMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	// genesis consensus config
	Consensus *GenesisConsensus `protobuf:"bytes,2,opt,name=consensus" json:"consensus,omitempty"`
	// genesis token distribution address
	// map<string, string> token_distribution = 3;
	TokenDistribution []*GenesisTokenDistribution `protobuf:"bytes,3,rep,name=token_distribution,json=tokenDistribution" json:"token_distribution,omitempty"`
}

func (m *Genesis) Reset()                    { *m = Genesis{} }
func (m *Genesis) String() string            { return proto.CompactTextString(m) }
func (*Genesis) ProtoMessage()               {}
func (*Genesis) Descriptor() ([]byte, []int) { return fileDescriptorGenesis, []int{0} }

func (m *Genesis) GetMeta() *GenesisMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Genesis) GetConsensus() *GenesisConsensus {
	if m != nil {
		return m.Consensus
	}
	return nil
}

func (m *Genesis) GetTokenDistribution() []*GenesisTokenDistribution {
	if m != nil {
		return m.TokenDistribution
	}
	return nil
}

type GenesisMeta struct {
	// ChainID.
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Dynasty size.
	DynastySize uint32 `protobuf:"varint,2,opt,name=dynasty_size,json=dynastySize,proto3" json:"dynasty_size,omitempty"`
}

func (m *GenesisMeta) Reset()                    { *m = GenesisMeta{} }
func (m *GenesisMeta) String() string            { return proto.CompactTextString(m) }
func (*GenesisMeta) ProtoMessage()               {}
func (*GenesisMeta) Descriptor() ([]byte, []int) { return fileDescriptorGenesis, []int{1} }

func (m *GenesisMeta) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GenesisMeta) GetDynastySize() uint32 {
	if m != nil {
		return m.DynastySize
	}
	return 0
}

type GenesisConsensus struct {
	Dpos *GenesisConsensusDpos `protobuf:"bytes,1,opt,name=dpos" json:"dpos,omitempty"`
}

func (m *GenesisConsensus) Reset()                    { *m = GenesisConsensus{} }
func (m *GenesisConsensus) String() string            { return proto.CompactTextString(m) }
func (*GenesisConsensus) ProtoMessage()               {}
func (*GenesisConsensus) Descriptor() ([]byte, []int) { return fileDescriptorGenesis, []int{2} }

func (m *GenesisConsensus) GetDpos() *GenesisConsensusDpos {
	if m != nil {
		return m.Dpos
	}
	return nil
}

type GenesisConsensusDpos struct {
	// dpos genesis dynasty address.
	Dynasty []string `protobuf:"bytes,1,rep,name=dynasty" json:"dynasty,omitempty"`
}

func (m *GenesisConsensusDpos) Reset()                    { *m = GenesisConsensusDpos{} }
func (m *GenesisConsensusDpos) String() string            { return proto.CompactTextString(m) }
func (*GenesisConsensusDpos) ProtoMessage()               {}
func (*GenesisConsensusDpos) Descriptor() ([]byte, []int) { return fileDescriptorGenesis, []int{3} }

func (m *GenesisConsensusDpos) GetDynasty() []string {
	if m != nil {
		return m.Dynasty
	}
	return nil
}

type GenesisTokenDistribution struct {
	Address string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Vesting string   `protobuf:"bytes,3,opt,name=vesting,proto3" json:"vesting,omitempty"`
	Vote    []string `protobuf:"bytes,4,rep,name=vote" json:"vote,omitempty"`
}

func (m *GenesisTokenDistribution) Reset()                    { *m = GenesisTokenDistribution{} }
func (m *GenesisTokenDistribution) String() string            { return proto.CompactTextString(m) }
func (*GenesisTokenDistribution) ProtoMessage()               {}
func (*GenesisTokenDistribution) Descriptor() ([]byte, []int) { return fileDescriptorGenesis, []int{4} }

func (m *GenesisTokenDistribution) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GenesisTokenDistribution) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *GenesisTokenDistribution) GetVesting() string {
	if m != nil {
		return m.Vesting
	}
	return ""
}

func (m *GenesisTokenDistribution) GetVote() []string {
	if m != nil {
		return m.Vote
	}
	return nil
}

func init() {
	proto.RegisterType((*Genesis)(nil), "corepb.Genesis")
	proto.RegisterType((*GenesisMeta)(nil), "corepb.GenesisMeta")
	proto.RegisterType((*GenesisConsensus)(nil), "corepb.GenesisConsensus")
	proto.RegisterType((*GenesisConsensusDpos)(nil), "corepb.GenesisConsensusDpos")
	proto.RegisterType((*GenesisTokenDistribution)(nil), "corepb.GenesisTokenDistribution")
}

func init() { proto.RegisterFile("genesis.proto", fileDescriptorGenesis) }

var fileDescriptorGenesis = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0xa9, 0x2d, 0x9b, 0xbd, 0x75, 0xa0, 0xd1, 0x87, 0x08, 0x3e, 0xd4, 0xbe, 0xb8, 0xa7,
	0x31, 0x26, 0xf8, 0x07, 0x1c, 0x88, 0x88, 0x08, 0xd1, 0xf7, 0x92, 0x36, 0x97, 0x19, 0xd4, 0xa4,
	0xf4, 0x66, 0x83, 0x0d, 0xff, 0x99, 0x7f, 0x4e, 0x9a, 0xb6, 0x38, 0x8a, 0x7b, 0xcb, 0xb9, 0xe7,
	0x4b, 0x72, 0x4e, 0x08, 0x4c, 0x56, 0x68, 0x90, 0x34, 0xcd, 0xaa, 0xda, 0x3a, 0xcb, 0x46, 0xa5,
	0xad, 0xb1, 0x2a, 0xb2, 0x9f, 0x00, 0xc6, 0x0f, 0xad, 0xc3, 0x6e, 0x20, 0xfa, 0x42, 0x27, 0x79,
	0x90, 0x06, 0xd3, 0x64, 0x71, 0x3e, 0x6b, 0x91, 0x59, 0x67, 0x3f, 0xa3, 0x93, 0xc2, 0x03, 0xec,
	0x0e, 0xe2, 0xd2, 0x1a, 0x42, 0x43, 0x6b, 0xe2, 0x47, 0x9e, 0xe6, 0x03, 0xfa, 0xbe, 0xf7, 0xc5,
	0x1f, 0xca, 0x5e, 0x80, 0x39, 0xfb, 0x81, 0x26, 0x57, 0x9a, 0x5c, 0xad, 0x8b, 0xb5, 0xd3, 0xd6,
	0xf0, 0x30, 0x0d, 0xa7, 0xc9, 0x22, 0x1d, 0x1c, 0xf0, 0xd6, 0x80, 0xcb, 0x3d, 0x4e, 0x9c, 0xb9,
	0xe1, 0x28, 0x7b, 0x82, 0x64, 0x2f, 0x1d, 0xbb, 0x84, 0xe3, 0xf2, 0x5d, 0x6a, 0x93, 0x6b, 0xe5,
	0x4b, 0x4c, 0xc4, 0xd8, 0xeb, 0x47, 0xc5, 0xae, 0xe1, 0x44, 0x6d, 0x8d, 0x24, 0xb7, 0xcd, 0x49,
	0xef, 0xd0, 0xa7, 0x9e, 0x88, 0xa4, 0x9b, 0xbd, 0xea, 0x1d, 0x66, 0x4b, 0x38, 0x1d, 0x86, 0x67,
	0x73, 0x88, 0x54, 0x65, 0xa9, 0x7b, 0x92, 0xab, 0x43, 0x25, 0x97, 0x95, 0x25, 0xe1, 0xc9, 0x6c,
	0x0e, 0x17, 0xff, 0xb9, 0x8c, 0xc3, 0xb8, 0xbb, 0x8c, 0x07, 0x69, 0x38, 0x8d, 0x45, 0x2f, 0xb3,
	0x6f, 0xe0, 0x87, 0x3a, 0x37, 0xbb, 0xa4, 0x52, 0x35, 0x52, 0x1b, 0x21, 0x16, 0xbd, 0x6c, 0x9c,
	0x42, 0x7e, 0x4a, 0x53, 0xb6, 0x5d, 0x62, 0xd1, 0xcb, 0xc6, 0xd9, 0x20, 0x39, 0x6d, 0x56, 0x3c,
	0x6c, 0x9d, 0x4e, 0x32, 0x06, 0xd1, 0xc6, 0x3a, 0xe4, 0x91, 0x0f, 0xe0, 0xd7, 0xc5, 0xc8, 0xff,
	0x87, 0xdb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xe1, 0x8e, 0x50, 0x20, 0x02, 0x00, 0x00,
}
