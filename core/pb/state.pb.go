// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: state.proto

package corepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              []byte   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce                uint64   `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Vesting              []byte   `protobuf:"bytes,11,opt,name=vesting,proto3" json:"vesting,omitempty"`
	VotedRootHash        []byte   `protobuf:"bytes,12,opt,name=voted_root_hash,json=votedRootHash,proto3" json:"voted_root_hash,omitempty"`
	Bandwidth            []byte   `protobuf:"bytes,13,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	LastBandwidthTs      int64    `protobuf:"varint,14,opt,name=last_bandwidth_ts,json=lastBandwidthTs,proto3" json:"last_bandwidth_ts,omitempty"`
	Unstaking            []byte   `protobuf:"bytes,15,opt,name=unstaking,proto3" json:"unstaking,omitempty"`
	LastUnstakingTs      int64    `protobuf:"varint,16,opt,name=last_unstaking_ts,json=lastUnstakingTs,proto3" json:"last_unstaking_ts,omitempty"`
	Collateral           []byte   `protobuf:"bytes,21,opt,name=collateral,proto3" json:"collateral,omitempty"`
	VotersRootHash       []byte   `protobuf:"bytes,22,opt,name=voters_root_hash,json=votersRootHash,proto3" json:"voters_root_hash,omitempty"`
	VotePower            []byte   `protobuf:"bytes,23,opt,name=vote_power,json=votePower,proto3" json:"vote_power,omitempty"`
	TxsFromRootHash      []byte   `protobuf:"bytes,31,opt,name=txs_from_root_hash,json=txsFromRootHash,proto3" json:"txs_from_root_hash,omitempty"`
	TxsToRootHash        []byte   `protobuf:"bytes,32,opt,name=txs_to_root_hash,json=txsToRootHash,proto3" json:"txs_to_root_hash,omitempty"`
	DataRootHash         []byte   `protobuf:"bytes,40,opt,name=data_root_hash,json=dataRootHash,proto3" json:"data_root_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_state_5a8d5029c55b63eb, []int{0}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *Account) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Account) GetVesting() []byte {
	if m != nil {
		return m.Vesting
	}
	return nil
}

func (m *Account) GetVotedRootHash() []byte {
	if m != nil {
		return m.VotedRootHash
	}
	return nil
}

func (m *Account) GetBandwidth() []byte {
	if m != nil {
		return m.Bandwidth
	}
	return nil
}

func (m *Account) GetLastBandwidthTs() int64 {
	if m != nil {
		return m.LastBandwidthTs
	}
	return 0
}

func (m *Account) GetUnstaking() []byte {
	if m != nil {
		return m.Unstaking
	}
	return nil
}

func (m *Account) GetLastUnstakingTs() int64 {
	if m != nil {
		return m.LastUnstakingTs
	}
	return 0
}

func (m *Account) GetCollateral() []byte {
	if m != nil {
		return m.Collateral
	}
	return nil
}

func (m *Account) GetVotersRootHash() []byte {
	if m != nil {
		return m.VotersRootHash
	}
	return nil
}

func (m *Account) GetVotePower() []byte {
	if m != nil {
		return m.VotePower
	}
	return nil
}

func (m *Account) GetTxsFromRootHash() []byte {
	if m != nil {
		return m.TxsFromRootHash
	}
	return nil
}

func (m *Account) GetTxsToRootHash() []byte {
	if m != nil {
		return m.TxsToRootHash
	}
	return nil
}

func (m *Account) GetDataRootHash() []byte {
	if m != nil {
		return m.DataRootHash
	}
	return nil
}

type AliasAccount struct {
	Account              []byte   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AliasAccount) Reset()         { *m = AliasAccount{} }
func (m *AliasAccount) String() string { return proto.CompactTextString(m) }
func (*AliasAccount) ProtoMessage()    {}
func (*AliasAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_state_5a8d5029c55b63eb, []int{1}
}
func (m *AliasAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliasAccount.Unmarshal(m, b)
}
func (m *AliasAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliasAccount.Marshal(b, m, deterministic)
}
func (dst *AliasAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliasAccount.Merge(dst, src)
}
func (m *AliasAccount) XXX_Size() int {
	return xxx_messageInfo_AliasAccount.Size(m)
}
func (m *AliasAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_AliasAccount.DiscardUnknown(m)
}

var xxx_messageInfo_AliasAccount proto.InternalMessageInfo

func (m *AliasAccount) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

type DataState struct {
	TxStateRootHash            []byte   `protobuf:"bytes,1,opt,name=tx_state_root_hash,json=txStateRootHash,proto3" json:"tx_state_root_hash,omitempty"`
	RecordStateRootHash        []byte   `protobuf:"bytes,2,opt,name=record_state_root_hash,json=recordStateRootHash,proto3" json:"record_state_root_hash,omitempty"`
	CertificationStateRootHash []byte   `protobuf:"bytes,3,opt,name=certification_state_root_hash,json=certificationStateRootHash,proto3" json:"certification_state_root_hash,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *DataState) Reset()         { *m = DataState{} }
func (m *DataState) String() string { return proto.CompactTextString(m) }
func (*DataState) ProtoMessage()    {}
func (*DataState) Descriptor() ([]byte, []int) {
	return fileDescriptor_state_5a8d5029c55b63eb, []int{2}
}
func (m *DataState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataState.Unmarshal(m, b)
}
func (m *DataState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataState.Marshal(b, m, deterministic)
}
func (dst *DataState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataState.Merge(dst, src)
}
func (m *DataState) XXX_Size() int {
	return xxx_messageInfo_DataState.Size(m)
}
func (m *DataState) XXX_DiscardUnknown() {
	xxx_messageInfo_DataState.DiscardUnknown(m)
}

var xxx_messageInfo_DataState proto.InternalMessageInfo

func (m *DataState) GetTxStateRootHash() []byte {
	if m != nil {
		return m.TxStateRootHash
	}
	return nil
}

func (m *DataState) GetRecordStateRootHash() []byte {
	if m != nil {
		return m.RecordStateRootHash
	}
	return nil
}

func (m *DataState) GetCertificationStateRootHash() []byte {
	if m != nil {
		return m.CertificationStateRootHash
	}
	return nil
}

type Record struct {
	RecordHash           []byte   `protobuf:"bytes,1,opt,name=record_hash,json=recordHash,proto3" json:"record_hash,omitempty"`
	Owner                []byte   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_state_5a8d5029c55b63eb, []int{3}
}
func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (dst *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(dst, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetRecordHash() []byte {
	if m != nil {
		return m.RecordHash
	}
	return nil
}

func (m *Record) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Record) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Certification struct {
	CertificateHash      []byte   `protobuf:"bytes,1,opt,name=certificate_hash,json=certificateHash,proto3" json:"certificate_hash,omitempty"`
	Issuer               []byte   `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Certified            []byte   `protobuf:"bytes,3,opt,name=certified,proto3" json:"certified,omitempty"`
	IssueTime            int64    `protobuf:"varint,4,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
	ExpirationTime       int64    `protobuf:"varint,5,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	RevocationTime       int64    `protobuf:"varint,6,opt,name=revocation_time,json=revocationTime,proto3" json:"revocation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Certification) Reset()         { *m = Certification{} }
func (m *Certification) String() string { return proto.CompactTextString(m) }
func (*Certification) ProtoMessage()    {}
func (*Certification) Descriptor() ([]byte, []int) {
	return fileDescriptor_state_5a8d5029c55b63eb, []int{4}
}
func (m *Certification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certification.Unmarshal(m, b)
}
func (m *Certification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certification.Marshal(b, m, deterministic)
}
func (dst *Certification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certification.Merge(dst, src)
}
func (m *Certification) XXX_Size() int {
	return xxx_messageInfo_Certification.Size(m)
}
func (m *Certification) XXX_DiscardUnknown() {
	xxx_messageInfo_Certification.DiscardUnknown(m)
}

var xxx_messageInfo_Certification proto.InternalMessageInfo

func (m *Certification) GetCertificateHash() []byte {
	if m != nil {
		return m.CertificateHash
	}
	return nil
}

func (m *Certification) GetIssuer() []byte {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *Certification) GetCertified() []byte {
	if m != nil {
		return m.Certified
	}
	return nil
}

func (m *Certification) GetIssueTime() int64 {
	if m != nil {
		return m.IssueTime
	}
	return 0
}

func (m *Certification) GetExpirationTime() int64 {
	if m != nil {
		return m.ExpirationTime
	}
	return 0
}

func (m *Certification) GetRevocationTime() int64 {
	if m != nil {
		return m.RevocationTime
	}
	return 0
}

type Alias struct {
	AliasName            string   `protobuf:"bytes,1,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alias) Reset()         { *m = Alias{} }
func (m *Alias) String() string { return proto.CompactTextString(m) }
func (*Alias) ProtoMessage()    {}
func (*Alias) Descriptor() ([]byte, []int) {
	return fileDescriptor_state_5a8d5029c55b63eb, []int{5}
}
func (m *Alias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alias.Unmarshal(m, b)
}
func (m *Alias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alias.Marshal(b, m, deterministic)
}
func (dst *Alias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alias.Merge(dst, src)
}
func (m *Alias) XXX_Size() int {
	return xxx_messageInfo_Alias.Size(m)
}
func (m *Alias) XXX_DiscardUnknown() {
	xxx_messageInfo_Alias.DiscardUnknown(m)
}

var xxx_messageInfo_Alias proto.InternalMessageInfo

func (m *Alias) GetAliasName() string {
	if m != nil {
		return m.AliasName
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "corepb.Account")
	proto.RegisterType((*AliasAccount)(nil), "corepb.AliasAccount")
	proto.RegisterType((*DataState)(nil), "corepb.DataState")
	proto.RegisterType((*Record)(nil), "corepb.Record")
	proto.RegisterType((*Certification)(nil), "corepb.Certification")
	proto.RegisterType((*Alias)(nil), "corepb.Alias")
}

func init() { proto.RegisterFile("state.proto", fileDescriptor_state_5a8d5029c55b63eb) }

var fileDescriptor_state_5a8d5029c55b63eb = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x94, 0xdb, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x15, 0x7a, 0x58, 0x75, 0x7a, 0xc4, 0x2c, 0x25, 0x42, 0x2c, 0x5b, 0x45, 0x68, 0x37,
	0x80, 0xc4, 0xcd, 0x3e, 0x41, 0x01, 0x21, 0xae, 0x10, 0x0a, 0xe5, 0x12, 0x45, 0x6e, 0xe2, 0xa5,
	0x11, 0x49, 0x1c, 0xd9, 0xd3, 0xc3, 0x53, 0xf0, 0x2c, 0xbc, 0x12, 0x6f, 0xb2, 0xf2, 0x38, 0x07,
	0x57, 0x7b, 0xd7, 0xf9, 0xfc, 0x79, 0xe6, 0x77, 0x34, 0x2a, 0x8c, 0x35, 0x72, 0x14, 0x1f, 0x2a,
	0x25, 0x51, 0xb2, 0x61, 0x22, 0x95, 0xa8, 0xb6, 0xc1, 0xdf, 0x3e, 0x5c, 0xac, 0x93, 0x44, 0xee,
	0x4b, 0x64, 0x3e, 0x5c, 0xf0, 0x34, 0x55, 0x42, 0x6b, 0xdf, 0x5b, 0x79, 0xe1, 0x24, 0x6a, 0x4a,
	0x73, 0xb2, 0xe5, 0x39, 0x2f, 0x13, 0xe1, 0x3f, 0xb1, 0x27, 0x75, 0xc9, 0x2e, 0x61, 0x50, 0x4a,
	0xc3, 0x7b, 0x2b, 0x2f, 0xec, 0x47, 0xb6, 0x30, 0xfe, 0x41, 0x68, 0xcc, 0xca, 0xdf, 0xfe, 0xd8,
	0xfa, 0x75, 0xc9, 0x6e, 0x60, 0x7e, 0x90, 0x28, 0xd2, 0x58, 0x49, 0x89, 0xf1, 0x8e, 0xeb, 0x9d,
	0x3f, 0x21, 0x63, 0x4a, 0x38, 0x92, 0x12, 0xbf, 0x72, 0xbd, 0x63, 0xaf, 0x60, 0xb4, 0xe5, 0x65,
	0x7a, 0xcc, 0x52, 0xdc, 0xf9, 0x53, 0x32, 0x3a, 0xc0, 0xde, 0xc1, 0xd3, 0x9c, 0x6b, 0x8c, 0x5b,
	0x12, 0xa3, 0xf6, 0x67, 0x2b, 0x2f, 0xec, 0x45, 0x73, 0x73, 0xf0, 0xb1, 0xe1, 0x1b, 0x6d, 0x3a,
	0xed, 0x4b, 0x8d, 0xfc, 0x8f, 0x49, 0x33, 0xb7, 0x9d, 0x5a, 0xd0, 0x76, 0x6a, 0x89, 0xe9, 0xb4,
	0xe8, 0x3a, 0xfd, 0x6c, 0xf8, 0x46, 0xb3, 0xd7, 0x00, 0x89, 0xcc, 0x73, 0x8e, 0x42, 0xf1, 0xdc,
	0x7f, 0x4e, 0xad, 0x1c, 0xc2, 0x42, 0x58, 0x98, 0x47, 0x28, 0xed, 0x3c, 0x6e, 0x49, 0xd6, 0xcc,
	0xf2, 0xf6, 0x75, 0x57, 0x00, 0x86, 0xc4, 0x95, 0x3c, 0x0a, 0xe5, 0xbf, 0xb0, 0xa1, 0x0c, 0xf9,
	0x6e, 0x00, 0x7b, 0x0f, 0x0c, 0x4f, 0x3a, 0xbe, 0x57, 0xb2, 0x70, 0x5a, 0x5d, 0x93, 0x36, 0xc7,
	0x93, 0xfe, 0xa2, 0x64, 0xd1, 0xf6, 0xba, 0x85, 0x85, 0x91, 0x51, 0x3a, 0xea, 0xca, 0x7e, 0x52,
	0x3c, 0xe9, 0x8d, 0x6c, 0xc5, 0x37, 0x30, 0x4b, 0x39, 0x72, 0x47, 0x0b, 0x49, 0x9b, 0x18, 0xda,
	0x58, 0x41, 0x08, 0x93, 0x75, 0x9e, 0x71, 0xed, 0x2e, 0x85, 0xfd, 0xd9, 0x2e, 0x85, 0x2d, 0x83,
	0x7f, 0x1e, 0x8c, 0x3e, 0x73, 0xe4, 0x3f, 0xcc, 0x5a, 0xd9, 0xcc, 0x31, 0xad, 0x98, 0x33, 0xc1,
	0x6b, 0x32, 0x93, 0xd4, 0x46, 0xb9, 0x83, 0xa5, 0x12, 0x89, 0x54, 0xe9, 0xa3, 0x0b, 0x76, 0xbd,
	0x9e, 0xd9, 0xd3, 0xf3, 0x4b, 0x6b, 0xb8, 0x4a, 0x84, 0xc2, 0xec, 0x3e, 0x4b, 0x38, 0x66, 0xb2,
	0x7c, 0x74, 0xb7, 0x47, 0x77, 0x5f, 0x9e, 0x49, 0x67, 0x2d, 0x82, 0x5f, 0x30, 0x8c, 0xa8, 0x33,
	0xbb, 0x86, 0x71, 0x9d, 0xc0, 0xc9, 0x09, 0x16, 0xd1, 0xb4, 0x4b, 0x18, 0xc8, 0x63, 0x29, 0x54,
	0x9d, 0xc8, 0x16, 0x66, 0x99, 0x30, 0x2b, 0x84, 0x46, 0x5e, 0x54, 0x34, 0xaf, 0x17, 0x75, 0x20,
	0xf8, 0xef, 0xc1, 0xf4, 0x93, 0x3b, 0x9d, 0xbd, 0x85, 0x45, 0x17, 0x47, 0x9c, 0x7d, 0x13, 0x87,
	0xd3, 0xc0, 0x25, 0x0c, 0x33, 0xad, 0xf7, 0xed, 0xc4, 0xba, 0x32, 0x23, 0x6b, 0x55, 0xa4, 0xf5,
	0x13, 0x3b, 0x60, 0x36, 0x89, 0xbc, 0xd8, 0xa4, 0xf0, 0xfb, 0x36, 0x11, 0x91, 0x4d, 0x56, 0x08,
	0x76, 0x0b, 0x73, 0x71, 0xaa, 0x32, 0x65, 0x3f, 0x18, 0x39, 0x03, 0x72, 0x66, 0x1d, 0x6e, 0x44,
	0x25, 0x0e, 0x32, 0x71, 0xc4, 0xa1, 0x15, 0x3b, 0x6c, 0xc4, 0xe0, 0x06, 0x06, 0xb4, 0x1f, 0x66,
	0x32, 0x37, 0x3f, 0xe2, 0x92, 0x17, 0x82, 0x1e, 0x35, 0x8a, 0x46, 0x44, 0xbe, 0xf1, 0x42, 0x6c,
	0x87, 0xf4, 0x3f, 0x73, 0xf7, 0x10, 0x00, 0x00, 0xff, 0xff, 0x85, 0xac, 0x80, 0xd3, 0x76, 0x04,
	0x00, 0x00,
}
