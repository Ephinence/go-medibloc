// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc.proto

package rpcpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetAccountRequest struct {
	// Send only one between address and alias
	// Hex string of the account addresss.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// String of the account alias.
	Alias string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	// Send only one between type and height
	// Block type "genesis", "confirmed", or "tail".
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// Block account state with height
	Height               uint64   `protobuf:"varint,11,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountRequest) Reset()         { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()    {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{0}
}
func (m *GetAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRequest.Unmarshal(m, b)
}
func (m *GetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRequest.Marshal(b, m, deterministic)
}
func (dst *GetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRequest.Merge(dst, src)
}
func (m *GetAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountRequest.Size(m)
}
func (m *GetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRequest proto.InternalMessageInfo

func (m *GetAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAccountRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *GetAccountRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetAccountRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetAccountResponse struct {
	// Hex string of the account address.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Current balance in unit of 1/(10^8) MED.
	Balance string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	// Current transaction count.
	Nonce uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Current vesting in unit of 1/(10^8) MED.
	Vesting string `protobuf:"bytes,4,opt,name=vesting,proto3" json:"vesting,omitempty"`
	// Voted address.
	Voted                []string `protobuf:"bytes,5,rep,name=voted" json:"voted,omitempty"`
	Bandwidth            string   `protobuf:"bytes,6,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Unstaking            string   `protobuf:"bytes,7,opt,name=unstaking,proto3" json:"unstaking,omitempty"`
	Alias                string   `protobuf:"bytes,8,opt,name=alias,proto3" json:"alias,omitempty"`
	CandidateId          string   `protobuf:"bytes,9,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountResponse) Reset()         { *m = GetAccountResponse{} }
func (m *GetAccountResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountResponse) ProtoMessage()    {}
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{1}
}
func (m *GetAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountResponse.Unmarshal(m, b)
}
func (m *GetAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountResponse.Marshal(b, m, deterministic)
}
func (dst *GetAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountResponse.Merge(dst, src)
}
func (m *GetAccountResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountResponse.Size(m)
}
func (m *GetAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountResponse proto.InternalMessageInfo

func (m *GetAccountResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAccountResponse) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *GetAccountResponse) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *GetAccountResponse) GetVesting() string {
	if m != nil {
		return m.Vesting
	}
	return ""
}

func (m *GetAccountResponse) GetVoted() []string {
	if m != nil {
		return m.Voted
	}
	return nil
}

func (m *GetAccountResponse) GetBandwidth() string {
	if m != nil {
		return m.Bandwidth
	}
	return ""
}

func (m *GetAccountResponse) GetUnstaking() string {
	if m != nil {
		return m.Unstaking
	}
	return ""
}

func (m *GetAccountResponse) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *GetAccountResponse) GetCandidateId() string {
	if m != nil {
		return m.CandidateId
	}
	return ""
}

type Data struct {
	Alias                string   `protobuf:"bytes,1,opt,name=Alias,proto3" json:"Alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{2}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type GetBlockRequest struct {
	// Send only one among hash, type and height
	// Block hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Block type "genesis", "confirmed", or "tail".
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Block height
	Height               uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{3}
}
func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(dst, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetBlockRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetBlockResponse struct {
	// Block height
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// Block hash
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// Block parent hash
	ParentHash string `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	// Block coinbase address
	Coinbase string `protobuf:"bytes,4,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	// Block reward
	Reward string `protobuf:"bytes,5,opt,name=reward,proto3" json:"reward,omitempty"`
	// Block supply
	Supply string `protobuf:"bytes,6,opt,name=supply,proto3" json:"supply,omitempty"`
	// Block timestamp
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Block chain id
	ChainId uint32 `protobuf:"varint,8,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Block hash algorithm
	HashAlg uint32 `protobuf:"varint,9,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	// Block signature algorithm
	CryptoAlg uint32 `protobuf:"varint,10,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	// Block signature
	Sign string `protobuf:"bytes,11,opt,name=sign,proto3" json:"sign,omitempty"`
	// Root hash of accounts trie
	AccsRoot string `protobuf:"bytes,20,opt,name=accs_root,json=accsRoot,proto3" json:"accs_root,omitempty"`
	// Root hash of txs trie
	TxsRoot string `protobuf:"bytes,21,opt,name=txs_root,json=txsRoot,proto3" json:"txs_root,omitempty"`
	// Root hash of dpos state trie
	DposRoot string `protobuf:"bytes,22,opt,name=dpos_root,json=dposRoot,proto3" json:"dpos_root,omitempty"`
	// Transactions in block
	Transactions         []*GetTransactionResponse `protobuf:"bytes,30,rep,name=transactions" json:"transactions,omitempty"`
	TxHashes             []string                  `protobuf:"bytes,31,rep,name=tx_hashes,json=txHashes" json:"tx_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{4}
}
func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(dst, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockResponse) GetParentHash() string {
	if m != nil {
		return m.ParentHash
	}
	return ""
}

func (m *GetBlockResponse) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *GetBlockResponse) GetReward() string {
	if m != nil {
		return m.Reward
	}
	return ""
}

func (m *GetBlockResponse) GetSupply() string {
	if m != nil {
		return m.Supply
	}
	return ""
}

func (m *GetBlockResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GetBlockResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GetBlockResponse) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

func (m *GetBlockResponse) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *GetBlockResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *GetBlockResponse) GetAccsRoot() string {
	if m != nil {
		return m.AccsRoot
	}
	return ""
}

func (m *GetBlockResponse) GetTxsRoot() string {
	if m != nil {
		return m.TxsRoot
	}
	return ""
}

func (m *GetBlockResponse) GetDposRoot() string {
	if m != nil {
		return m.DposRoot
	}
	return ""
}

func (m *GetBlockResponse) GetTransactions() []*GetTransactionResponse {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *GetBlockResponse) GetTxHashes() []string {
	if m != nil {
		return m.TxHashes
	}
	return nil
}

type GetBlocksRequest struct {
	From                 uint64   `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   uint64   `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlocksRequest) Reset()         { *m = GetBlocksRequest{} }
func (m *GetBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlocksRequest) ProtoMessage()    {}
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{5}
}
func (m *GetBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksRequest.Unmarshal(m, b)
}
func (m *GetBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksRequest.Merge(dst, src)
}
func (m *GetBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlocksRequest.Size(m)
}
func (m *GetBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksRequest proto.InternalMessageInfo

func (m *GetBlocksRequest) GetFrom() uint64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *GetBlocksRequest) GetTo() uint64 {
	if m != nil {
		return m.To
	}
	return 0
}

type GetBlocksResponse struct {
	Blocks               []*GetBlockResponse `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetBlocksResponse) Reset()         { *m = GetBlocksResponse{} }
func (m *GetBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlocksResponse) ProtoMessage()    {}
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{6}
}
func (m *GetBlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksResponse.Unmarshal(m, b)
}
func (m *GetBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksResponse.Merge(dst, src)
}
func (m *GetBlocksResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlocksResponse.Size(m)
}
func (m *GetBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksResponse proto.InternalMessageInfo

func (m *GetBlocksResponse) GetBlocks() []*GetBlockResponse {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type NonParamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonParamRequest) Reset()         { *m = NonParamRequest{} }
func (m *NonParamRequest) String() string { return proto.CompactTextString(m) }
func (*NonParamRequest) ProtoMessage()    {}
func (*NonParamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{7}
}
func (m *NonParamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonParamRequest.Unmarshal(m, b)
}
func (m *NonParamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonParamRequest.Marshal(b, m, deterministic)
}
func (dst *NonParamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonParamRequest.Merge(dst, src)
}
func (m *NonParamRequest) XXX_Size() int {
	return xxx_messageInfo_NonParamRequest.Size(m)
}
func (m *NonParamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NonParamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NonParamRequest proto.InternalMessageInfo

type Candidate struct {
	CandidateId          string   `protobuf:"bytes,1,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Collateral           string   `protobuf:"bytes,4,opt,name=collateral,proto3" json:"collateral,omitempty"`
	VotePower            string   `protobuf:"bytes,5,opt,name=votePower,proto3" json:"votePower,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{8}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetCandidateId() string {
	if m != nil {
		return m.CandidateId
	}
	return ""
}

func (m *Candidate) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Candidate) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Candidate) GetCollateral() string {
	if m != nil {
		return m.Collateral
	}
	return ""
}

func (m *Candidate) GetVotePower() string {
	if m != nil {
		return m.VotePower
	}
	return ""
}

type GetCandidatesResponse struct {
	Candidates           []*Candidate `protobuf:"bytes,1,rep,name=candidates" json:"candidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetCandidatesResponse) Reset()         { *m = GetCandidatesResponse{} }
func (m *GetCandidatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCandidatesResponse) ProtoMessage()    {}
func (*GetCandidatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{9}
}
func (m *GetCandidatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCandidatesResponse.Unmarshal(m, b)
}
func (m *GetCandidatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCandidatesResponse.Marshal(b, m, deterministic)
}
func (dst *GetCandidatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCandidatesResponse.Merge(dst, src)
}
func (m *GetCandidatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCandidatesResponse.Size(m)
}
func (m *GetCandidatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCandidatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCandidatesResponse proto.InternalMessageInfo

func (m *GetCandidatesResponse) GetCandidates() []*Candidate {
	if m != nil {
		return m.Candidates
	}
	return nil
}

type GetDynastyResponse struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDynastyResponse) Reset()         { *m = GetDynastyResponse{} }
func (m *GetDynastyResponse) String() string { return proto.CompactTextString(m) }
func (*GetDynastyResponse) ProtoMessage()    {}
func (*GetDynastyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{10}
}
func (m *GetDynastyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDynastyResponse.Unmarshal(m, b)
}
func (m *GetDynastyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDynastyResponse.Marshal(b, m, deterministic)
}
func (dst *GetDynastyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDynastyResponse.Merge(dst, src)
}
func (m *GetDynastyResponse) XXX_Size() int {
	return xxx_messageInfo_GetDynastyResponse.Size(m)
}
func (m *GetDynastyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDynastyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDynastyResponse proto.InternalMessageInfo

func (m *GetDynastyResponse) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type GetMedStateResponse struct {
	// Block chain id
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Current tail block hash
	Tail string `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	// Current tail block height
	Height uint64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// Current LIB hash
	LIB                  string   `protobuf:"bytes,4,opt,name=LIB,proto3" json:"LIB,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMedStateResponse) Reset()         { *m = GetMedStateResponse{} }
func (m *GetMedStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetMedStateResponse) ProtoMessage()    {}
func (*GetMedStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{11}
}
func (m *GetMedStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMedStateResponse.Unmarshal(m, b)
}
func (m *GetMedStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMedStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetMedStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMedStateResponse.Merge(dst, src)
}
func (m *GetMedStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetMedStateResponse.Size(m)
}
func (m *GetMedStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMedStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMedStateResponse proto.InternalMessageInfo

func (m *GetMedStateResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GetMedStateResponse) GetTail() string {
	if m != nil {
		return m.Tail
	}
	return ""
}

func (m *GetMedStateResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetMedStateResponse) GetLIB() string {
	if m != nil {
		return m.LIB
	}
	return ""
}

type GetTransactionsResponse struct {
	Transactions         []*GetTransactionResponse `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetTransactionsResponse) Reset()         { *m = GetTransactionsResponse{} }
func (m *GetTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsResponse) ProtoMessage()    {}
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{12}
}
func (m *GetTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsResponse.Unmarshal(m, b)
}
func (m *GetTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *GetTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsResponse.Merge(dst, src)
}
func (m *GetTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsResponse.Size(m)
}
func (m *GetTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsResponse proto.InternalMessageInfo

func (m *GetTransactionsResponse) GetTransactions() []*GetTransactionResponse {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetTransactionRequest struct {
	// Transaction hash
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{13}
}
func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(dst, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetTransactionResponse struct {
	// Transaction hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Hex string of the sender account addresss.
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// Hex string of the receiver account addresss.
	To string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// Amount of value sending with this transaction.
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Transaction timestamp.
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transaction type.
	TxType string `protobuf:"bytes,6,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	// Transaction nonce.
	Nonce uint64 `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Transaction chain ID.
	ChainId uint32 `protobuf:"varint,8,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Transaction payload.
	Payload string `protobuf:"bytes,20,opt,name=payload,proto3" json:"payload,omitempty"`
	// Transaction hash algorithm
	HashAlg uint32 `protobuf:"varint,29,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	// Transaction crypto algorithm
	CryptoAlg uint32 `protobuf:"varint,30,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	// Transaction sign.
	Sign string `protobuf:"bytes,31,opt,name=sign,proto3" json:"sign,omitempty"`
	// Transaction payer's sign.
	PayerSign string `protobuf:"bytes,32,opt,name=payer_sign,json=payerSign,proto3" json:"payer_sign,omitempty"`
	// If transaction is executed and included in the block, it returns true. otherwise, false.
	Executed             bool     `protobuf:"varint,33,opt,name=executed,proto3" json:"executed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{14}
}
func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionResponse.Unmarshal(m, b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(dst, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionResponse.Size(m)
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetTransactionResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *GetTransactionResponse) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *GetTransactionResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GetTransactionResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GetTransactionResponse) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *GetTransactionResponse) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *GetTransactionResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GetTransactionResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *GetTransactionResponse) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

func (m *GetTransactionResponse) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *GetTransactionResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *GetTransactionResponse) GetPayerSign() string {
	if m != nil {
		return m.PayerSign
	}
	return ""
}

func (m *GetTransactionResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

type GetTransactionReceiptResponse struct {
	Executed             bool     `protobuf:"varint,1,opt,name=executed,proto3" json:"executed,omitempty"`
	CpuUsage             string   `protobuf:"bytes,2,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	NetUsate             string   `protobuf:"bytes,3,opt,name=netUsate,proto3" json:"netUsate,omitempty"`
	Error                string   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionReceiptResponse) Reset()         { *m = GetTransactionReceiptResponse{} }
func (m *GetTransactionReceiptResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionReceiptResponse) ProtoMessage()    {}
func (*GetTransactionReceiptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{15}
}
func (m *GetTransactionReceiptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionReceiptResponse.Unmarshal(m, b)
}
func (m *GetTransactionReceiptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionReceiptResponse.Marshal(b, m, deterministic)
}
func (dst *GetTransactionReceiptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionReceiptResponse.Merge(dst, src)
}
func (m *GetTransactionReceiptResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionReceiptResponse.Size(m)
}
func (m *GetTransactionReceiptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionReceiptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionReceiptResponse proto.InternalMessageInfo

func (m *GetTransactionReceiptResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *GetTransactionReceiptResponse) GetCpuUsage() string {
	if m != nil {
		return m.CpuUsage
	}
	return ""
}

func (m *GetTransactionReceiptResponse) GetNetUsate() string {
	if m != nil {
		return m.NetUsate
	}
	return ""
}

func (m *GetTransactionReceiptResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetAccountTransactionsRequest struct {
	// Hex string of the account addresss.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Whether or not to include pending transactions. Default is true.
	IncludePending       bool     `protobuf:"varint,2,opt,name=include_pending,json=includePending,proto3" json:"include_pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountTransactionsRequest) Reset()         { *m = GetAccountTransactionsRequest{} }
func (m *GetAccountTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountTransactionsRequest) ProtoMessage()    {}
func (*GetAccountTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{16}
}
func (m *GetAccountTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountTransactionsRequest.Unmarshal(m, b)
}
func (m *GetAccountTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAccountTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountTransactionsRequest.Merge(dst, src)
}
func (m *GetAccountTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountTransactionsRequest.Size(m)
}
func (m *GetAccountTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountTransactionsRequest proto.InternalMessageInfo

func (m *GetAccountTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAccountTransactionsRequest) GetIncludePending() bool {
	if m != nil {
		return m.IncludePending
	}
	return false
}

type SendTransactionRequest struct {
	// Transaction hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Hex string of the sender account addresss.
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// Amount of value sending with this transaction.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Transaction timestamp.
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transaction type.
	TxType string `protobuf:"bytes,5,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	// Transaction nonce.
	Nonce uint64 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Transaction chain ID.
	ChainId uint32 `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Transaction payload
	Payload string `protobuf:"bytes,20,opt,name=payload,proto3" json:"payload,omitempty"`
	// Transaction hash algorithm
	HashAlg uint32 `protobuf:"varint,29,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	// Transaction crypto algorithm.
	CryptoAlg uint32 `protobuf:"varint,30,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	// Transaction sign.
	Sign string `protobuf:"bytes,31,opt,name=sign,proto3" json:"sign,omitempty"`
	// Transaction payer's sign.
	PayerSign            string   `protobuf:"bytes,32,opt,name=payer_sign,json=payerSign,proto3" json:"payer_sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{17}
}
func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(dst, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *SendTransactionRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendTransactionRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *SendTransactionRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SendTransactionRequest) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *SendTransactionRequest) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *SendTransactionRequest) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *SendTransactionRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *SendTransactionRequest) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

func (m *SendTransactionRequest) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *SendTransactionRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *SendTransactionRequest) GetPayerSign() string {
	if m != nil {
		return m.PayerSign
	}
	return ""
}

type SendTransactionResponse struct {
	// Hex string of transaction hash.
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionResponse) Reset()         { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()    {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{18}
}
func (m *SendTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionResponse.Unmarshal(m, b)
}
func (m *SendTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SendTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionResponse.Merge(dst, src)
}
func (m *SendTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendTransactionResponse.Size(m)
}
func (m *SendTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionResponse proto.InternalMessageInfo

func (m *SendTransactionResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type SubscribeRequest struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{19}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type SubscribeResponse struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{20}
}
func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (dst *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(dst, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SubscribeResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type HealthCheckResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b6b275d29fd6887b, []int{21}
}
func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (dst *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(dst, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*GetAccountRequest)(nil), "rpcpb.GetAccountRequest")
	proto.RegisterType((*GetAccountResponse)(nil), "rpcpb.GetAccountResponse")
	proto.RegisterType((*Data)(nil), "rpcpb.Data")
	proto.RegisterType((*GetBlockRequest)(nil), "rpcpb.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "rpcpb.GetBlockResponse")
	proto.RegisterType((*GetBlocksRequest)(nil), "rpcpb.GetBlocksRequest")
	proto.RegisterType((*GetBlocksResponse)(nil), "rpcpb.GetBlocksResponse")
	proto.RegisterType((*NonParamRequest)(nil), "rpcpb.NonParamRequest")
	proto.RegisterType((*Candidate)(nil), "rpcpb.Candidate")
	proto.RegisterType((*GetCandidatesResponse)(nil), "rpcpb.GetCandidatesResponse")
	proto.RegisterType((*GetDynastyResponse)(nil), "rpcpb.GetDynastyResponse")
	proto.RegisterType((*GetMedStateResponse)(nil), "rpcpb.GetMedStateResponse")
	proto.RegisterType((*GetTransactionsResponse)(nil), "rpcpb.GetTransactionsResponse")
	proto.RegisterType((*GetTransactionRequest)(nil), "rpcpb.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "rpcpb.GetTransactionResponse")
	proto.RegisterType((*GetTransactionReceiptResponse)(nil), "rpcpb.GetTransactionReceiptResponse")
	proto.RegisterType((*GetAccountTransactionsRequest)(nil), "rpcpb.GetAccountTransactionsRequest")
	proto.RegisterType((*SendTransactionRequest)(nil), "rpcpb.SendTransactionRequest")
	proto.RegisterType((*SendTransactionResponse)(nil), "rpcpb.SendTransactionResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "rpcpb.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "rpcpb.SubscribeResponse")
	proto.RegisterType((*HealthCheckResponse)(nil), "rpcpb.HealthCheckResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	GetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error)
	GetCandidates(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetCandidatesResponse, error)
	GetDynasty(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetDynastyResponse, error)
	GetMedState(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetMedStateResponse, error)
	GetPendingTransactions(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error)
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
	GetTransactionReceipt(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionReceiptResponse, error)
	SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error)
	HealthCheck(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error) {
	out := new(GetAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error) {
	out := new(GetBlocksResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetCandidates(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetCandidatesResponse, error) {
	out := new(GetCandidatesResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetCandidates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetDynasty(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetDynastyResponse, error) {
	out := new(GetDynastyResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetDynasty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetMedState(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetMedStateResponse, error) {
	out := new(GetMedStateResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetMedState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetPendingTransactions(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error) {
	out := new(GetTransactionsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetPendingTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionReceipt(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionReceiptResponse, error) {
	out := new(GetTransactionReceiptResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransactionReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ApiService_serviceDesc.Streams[0], "/rpcpb.ApiService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ApiService_SubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type apiServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *apiServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *apiServiceClient) HealthCheck(ctx context.Context, in *NonParamRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	GetAccount(context.Context, *GetAccountRequest) (*GetAccountResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	GetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error)
	GetCandidates(context.Context, *NonParamRequest) (*GetCandidatesResponse, error)
	GetDynasty(context.Context, *NonParamRequest) (*GetDynastyResponse, error)
	GetMedState(context.Context, *NonParamRequest) (*GetMedStateResponse, error)
	GetPendingTransactions(context.Context, *NonParamRequest) (*GetTransactionsResponse, error)
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
	GetTransactionReceipt(context.Context, *GetTransactionRequest) (*GetTransactionReceiptResponse, error)
	SendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionResponse, error)
	Subscribe(*SubscribeRequest, ApiService_SubscribeServer) error
	HealthCheck(context.Context, *NonParamRequest) (*HealthCheckResponse, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlocks(ctx, req.(*GetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetCandidates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetCandidates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetCandidates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetCandidates(ctx, req.(*NonParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetDynasty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetDynasty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetDynasty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetDynasty(ctx, req.(*NonParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetMedState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetMedState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetMedState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetMedState(ctx, req.(*NonParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetPendingTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetPendingTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetPendingTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetPendingTransactions(ctx, req.(*NonParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransactionReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionReceipt(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServiceServer).Subscribe(m, &apiServiceSubscribeServer{stream})
}

type ApiService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type apiServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *apiServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ApiService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).HealthCheck(ctx, req.(*NonParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _ApiService_GetAccount_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _ApiService_GetBlock_Handler,
		},
		{
			MethodName: "GetBlocks",
			Handler:    _ApiService_GetBlocks_Handler,
		},
		{
			MethodName: "GetCandidates",
			Handler:    _ApiService_GetCandidates_Handler,
		},
		{
			MethodName: "GetDynasty",
			Handler:    _ApiService_GetDynasty_Handler,
		},
		{
			MethodName: "GetMedState",
			Handler:    _ApiService_GetMedState_Handler,
		},
		{
			MethodName: "GetPendingTransactions",
			Handler:    _ApiService_GetPendingTransactions_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _ApiService_GetTransaction_Handler,
		},
		{
			MethodName: "GetTransactionReceipt",
			Handler:    _ApiService_GetTransactionReceipt_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _ApiService_SendTransaction_Handler,
		},
		{
			MethodName: "HealthCheck",
			Handler:    _ApiService_HealthCheck_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ApiService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_b6b275d29fd6887b) }

var fileDescriptor_rpc_b6b275d29fd6887b = []byte{
	// 1402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x06, 0x29, 0xd9, 0x12, 0x8f, 0xe2, 0xdb, 0xd8, 0x91, 0x69, 0xc5, 0x17, 0x65, 0xf0, 0xff,
	0xf8, 0x8d, 0xfc, 0x68, 0x94, 0xa6, 0x40, 0x17, 0x05, 0xba, 0x70, 0x12, 0xc0, 0x31, 0xd0, 0x06,
	0x29, 0x9d, 0xb4, 0x40, 0x91, 0x42, 0x18, 0x91, 0x13, 0x89, 0x30, 0xcd, 0x61, 0xc9, 0x91, 0x23,
	0x01, 0x5d, 0xb5, 0xab, 0xae, 0xbb, 0xc9, 0xeb, 0xf4, 0x19, 0xfa, 0x0a, 0x05, 0xba, 0xee, 0x1b,
	0x14, 0x73, 0x38, 0xbc, 0x49, 0xa2, 0xd3, 0xee, 0xba, 0xd3, 0xb9, 0xcc, 0x77, 0x66, 0xce, 0x7c,
	0xf3, 0x1d, 0x0a, 0xac, 0x38, 0x72, 0x1f, 0x46, 0xb1, 0x90, 0x82, 0xac, 0xc5, 0x91, 0x1b, 0x8d,
	0x7a, 0x87, 0x63, 0x21, 0xc6, 0x01, 0x1f, 0xb0, 0xc8, 0x1f, 0xb0, 0x30, 0x14, 0x92, 0x49, 0x5f,
	0x84, 0x49, 0x9a, 0x44, 0x05, 0xec, 0x9c, 0x73, 0x79, 0xe6, 0xba, 0x62, 0x1a, 0x4a, 0x87, 0x7f,
	0x3f, 0xe5, 0x89, 0x24, 0x36, 0xb4, 0x98, 0xe7, 0xc5, 0x3c, 0x49, 0x6c, 0xa3, 0x6f, 0x9c, 0x5a,
	0x4e, 0x66, 0x92, 0x3d, 0x58, 0x63, 0x81, 0xcf, 0x12, 0xdb, 0x44, 0x7f, 0x6a, 0x10, 0x02, 0x4d,
	0x39, 0x8f, 0xb8, 0x0d, 0xe8, 0xc4, 0xdf, 0xa4, 0x0b, 0xeb, 0x13, 0xee, 0x8f, 0x27, 0xd2, 0xee,
	0xf4, 0x8d, 0xd3, 0xa6, 0xa3, 0x2d, 0xfa, 0x93, 0x09, 0xa4, 0x5c, 0x31, 0x89, 0x44, 0x98, 0xf0,
	0x5b, 0x4a, 0xda, 0xd0, 0x1a, 0xb1, 0x80, 0x85, 0x2e, 0xd7, 0x45, 0x33, 0x53, 0x6d, 0x26, 0x14,
	0xca, 0xdf, 0xc0, 0x0a, 0xa9, 0xa1, 0xf2, 0x6f, 0x78, 0x22, 0xfd, 0x70, 0x6c, 0x37, 0xd3, 0x7c,
	0x6d, 0xaa, 0xfc, 0x1b, 0x21, 0xb9, 0x67, 0xaf, 0xf5, 0x1b, 0x6a, 0xf3, 0x68, 0x90, 0x43, 0xb0,
	0x46, 0x2c, 0xf4, 0xde, 0xf9, 0x9e, 0x9c, 0xd8, 0xeb, 0xb8, 0xa2, 0x70, 0xa8, 0xe8, 0x34, 0x4c,
	0x24, 0xbb, 0x52, 0x78, 0xad, 0x34, 0x9a, 0x3b, 0x8a, 0x76, 0xb4, 0xcb, 0xed, 0xb8, 0x0f, 0x77,
	0x5c, 0x16, 0x7a, 0xbe, 0xc7, 0x24, 0x1f, 0xfa, 0x9e, 0x6d, 0x61, 0xb0, 0x93, 0xfb, 0x2e, 0x3c,
	0x7a, 0x08, 0xcd, 0x67, 0x4c, 0x32, 0x05, 0x70, 0x86, 0x00, 0xe9, 0xa1, 0x53, 0x83, 0x7e, 0x05,
	0x5b, 0xe7, 0x5c, 0x3e, 0x09, 0x84, 0x7b, 0x95, 0x5d, 0x09, 0x81, 0xe6, 0x84, 0x25, 0x13, 0x9d,
	0x87, 0xbf, 0xf3, 0xb6, 0x9b, 0x2b, 0xdb, 0xde, 0xa8, 0xb4, 0xfd, 0x8f, 0x06, 0x6c, 0x17, 0x98,
	0xba, 0xe9, 0x45, 0xb2, 0x51, 0x4e, 0xce, 0x8b, 0x99, 0xa5, 0x62, 0x27, 0xd0, 0x89, 0x58, 0xcc,
	0x43, 0x39, 0xc4, 0x50, 0x03, 0x43, 0x90, 0xba, 0x9e, 0xab, 0x84, 0x1e, 0xb4, 0x5d, 0xe1, 0x87,
	0x23, 0x96, 0x70, 0xdd, 0xf8, 0xdc, 0x56, 0x85, 0x62, 0xfe, 0x8e, 0xc5, 0xaa, 0xf5, 0x2a, 0xa2,
	0x2d, 0xe5, 0x4f, 0xa6, 0x51, 0x14, 0xcc, 0x75, 0xe3, 0xb5, 0xa5, 0xba, 0x2e, 0xfd, 0x6b, 0x9e,
	0x48, 0x76, 0x1d, 0x61, 0xd7, 0x1b, 0x4e, 0xe1, 0x20, 0x07, 0xd0, 0x76, 0x27, 0xcc, 0x0f, 0x55,
	0x6f, 0x55, 0xe3, 0x37, 0x9c, 0x16, 0xda, 0x17, 0x9e, 0x0a, 0xa9, 0xed, 0x0d, 0x59, 0x30, 0xc6,
	0xb6, 0x6f, 0x38, 0x2d, 0x65, 0x9f, 0x05, 0x63, 0x72, 0x04, 0xe0, 0xc6, 0xf3, 0x48, 0x0a, 0x0c,
	0x02, 0x06, 0xad, 0xd4, 0xa3, 0xc2, 0x04, 0x9a, 0x89, 0x3f, 0x0e, 0x91, 0xad, 0x96, 0x83, 0xbf,
	0xc9, 0x3d, 0xb0, 0x98, 0xeb, 0x26, 0xc3, 0x58, 0x08, 0x69, 0xef, 0xa5, 0x67, 0x52, 0x0e, 0x47,
	0x08, 0xa9, 0x4a, 0xc9, 0x99, 0x8e, 0xdd, 0x4d, 0x89, 0x26, 0x67, 0x69, 0xe8, 0x1e, 0x58, 0x5e,
	0x24, 0x74, 0xac, 0x9b, 0xae, 0x53, 0x0e, 0x0c, 0x9e, 0xc1, 0x1d, 0x19, 0xb3, 0x30, 0x61, 0x2e,
	0xbe, 0x43, 0xfb, 0xb8, 0xdf, 0x38, 0xed, 0x3c, 0x3e, 0x7a, 0x88, 0xaf, 0xf5, 0xe1, 0x39, 0x97,
	0xaf, 0x8a, 0x68, 0x76, 0x53, 0x4e, 0x65, 0x89, 0xc2, 0x97, 0x33, 0xbc, 0x07, 0x9e, 0xd8, 0x27,
	0x48, 0xe6, 0xb6, 0x9c, 0x3d, 0x47, 0x9b, 0x7e, 0x5a, 0x5c, 0x74, 0x52, 0x62, 0xcf, 0xdb, 0x58,
	0x5c, 0xeb, 0x6b, 0xc6, 0xdf, 0x64, 0x13, 0x4c, 0x29, 0xf0, 0x8a, 0x9b, 0x8e, 0x29, 0x05, 0x7d,
	0x86, 0x4a, 0x90, 0xad, 0xd3, 0x0c, 0x19, 0xc0, 0xfa, 0x08, 0x3d, 0xb6, 0x81, 0xdb, 0xdc, 0x2f,
	0xb6, 0x59, 0xa1, 0x92, 0xa3, 0xd3, 0xe8, 0x0e, 0x6c, 0xbd, 0x10, 0xe1, 0x4b, 0x16, 0xb3, 0x6b,
	0x5d, 0x9c, 0xbe, 0x37, 0xc0, 0x7a, 0x9a, 0x71, 0x7f, 0xe9, 0x71, 0x18, 0x4b, 0x8f, 0xa3, 0xac,
	0x05, 0x66, 0x55, 0x0b, 0xb6, 0xa1, 0x31, 0x8d, 0x03, 0x4d, 0x3e, 0xf5, 0x93, 0x1c, 0x03, 0xb8,
	0x22, 0x08, 0x98, 0xe4, 0x31, 0x0b, 0x34, 0xef, 0x4a, 0x1e, 0xc5, 0x24, 0xf5, 0xcc, 0x5f, 0x8a,
	0x77, 0x3c, 0xd6, 0xe4, 0x2b, 0x1c, 0xf4, 0x02, 0xee, 0x9e, 0x73, 0x99, 0x6f, 0xae, 0x38, 0xf7,
	0x23, 0x80, 0x7c, 0x47, 0xd9, 0xd9, 0xb7, 0xf5, 0xd9, 0xf3, 0x74, 0xa7, 0x94, 0x43, 0x1f, 0xa3,
	0xac, 0x3d, 0x9b, 0x87, 0x2c, 0x91, 0xf3, 0x1c, 0xe7, 0x10, 0x2c, 0xbd, 0x77, 0x0d, 0x63, 0x39,
	0x85, 0x83, 0x86, 0xb0, 0x7b, 0xce, 0xe5, 0x97, 0xdc, 0xbb, 0x94, 0x0a, 0x2e, 0x5b, 0x54, 0xe6,
	0xb7, 0x51, 0xe5, 0xb7, 0x7a, 0xf2, 0xcc, 0x0f, 0xf2, 0x27, 0xcf, 0xfc, 0xa0, 0xee, 0xc9, 0xab,
	0x66, 0x7d, 0x71, 0xf1, 0x44, 0xf7, 0x44, 0xfd, 0xa4, 0x6f, 0x60, 0xbf, 0xca, 0xaf, 0xe2, 0xc0,
	0x8b, 0xac, 0x34, 0xfe, 0x31, 0x2b, 0xe9, 0xff, 0xb1, 0x99, 0x95, 0xbc, 0x5a, 0xed, 0xa2, 0x7f,
	0x9a, 0xd0, 0x5d, 0x8d, 0x5a, 0x27, 0x75, 0x48, 0x60, 0x7d, 0xee, 0x12, 0x81, 0x53, 0x2e, 0x98,
	0x52, 0xa0, 0xbc, 0xb3, 0x60, 0x9a, 0xa9, 0x4f, 0x6a, 0x54, 0xa5, 0x64, 0x6d, 0x51, 0x4a, 0xf6,
	0xa1, 0x25, 0x67, 0x43, 0x54, 0x51, 0xad, 0x40, 0x72, 0xf6, 0x4a, 0xe9, 0x68, 0x3e, 0x5b, 0x5a,
	0xe5, 0xd9, 0x72, 0x8b, 0xf2, 0xd8, 0xd0, 0x8a, 0xd8, 0x3c, 0x10, 0xcc, 0xd3, 0x4a, 0x91, 0x99,
	0x15, 0x4d, 0x3a, 0xba, 0x4d, 0x93, 0x8e, 0xeb, 0x34, 0xe9, 0xa4, 0xa4, 0x49, 0x47, 0x00, 0x11,
	0x9b, 0xf3, 0x78, 0x88, 0x91, 0x7e, 0xca, 0x68, 0xf4, 0x5c, 0xaa, 0x70, 0x0f, 0xda, 0x7c, 0xc6,
	0xdd, 0xa9, 0x1a, 0x73, 0xf7, 0xfb, 0xc6, 0x69, 0xdb, 0xc9, 0x6d, 0xfa, 0xb3, 0x01, 0x47, 0x8b,
	0x3d, 0x77, 0xb9, 0x1f, 0x15, 0x53, 0xb8, 0xbc, 0xda, 0xa8, 0xae, 0x46, 0x7d, 0x8f, 0xa6, 0xaf,
	0x13, 0x36, 0xce, 0x26, 0x4e, 0x6e, 0xab, 0x58, 0xc8, 0xe5, 0xeb, 0x84, 0x49, 0xae, 0x2f, 0x24,
	0xb7, 0x55, 0x27, 0x79, 0x1c, 0x8b, 0x38, 0xbb, 0x16, 0x34, 0xe8, 0x08, 0xb7, 0xa2, 0xbf, 0x02,
	0xaa, 0x8c, 0xfc, 0xd0, 0x37, 0xc8, 0xff, 0x60, 0xcb, 0x0f, 0xdd, 0x60, 0xea, 0xf1, 0x61, 0xc4,
	0x43, 0x4f, 0x0d, 0x66, 0x13, 0xf7, 0xba, 0xa9, 0xdd, 0x2f, 0x53, 0x2f, 0xfd, 0xd5, 0x84, 0xee,
	0x25, 0x0f, 0xbd, 0xbf, 0x47, 0xc9, 0x92, 0x20, 0x2e, 0xf0, 0xa9, 0x51, 0xcb, 0xa7, 0xe6, 0x2d,
	0x7c, 0x5a, 0x5b, 0xcd, 0xa7, 0xf5, 0x3a, 0x3e, 0xb5, 0xfe, 0x8d, 0x7c, 0xa2, 0x1f, 0xc1, 0xfe,
	0x52, 0x0b, 0xeb, 0xdf, 0x29, 0x7d, 0x00, 0xdb, 0x97, 0xd3, 0x51, 0xe2, 0xc6, 0xfe, 0x88, 0x67,
	0xbd, 0xee, 0xc2, 0xba, 0x14, 0x91, 0xef, 0x66, 0x02, 0xa8, 0x2d, 0xfa, 0x39, 0xec, 0x94, 0x72,
	0x35, 0xe8, 0x1e, 0xac, 0x61, 0x38, 0xfb, 0x20, 0x42, 0x63, 0xd5, 0x07, 0x09, 0xfd, 0x2f, 0xec,
	0x3e, 0xe7, 0x2c, 0x90, 0x93, 0xa7, 0x13, 0x5e, 0xfa, 0xa6, 0xd9, 0x04, 0x53, 0x5c, 0x69, 0xf2,
	0x9a, 0xe2, 0xea, 0xf1, 0x7b, 0x0b, 0xe0, 0x2c, 0xf2, 0x2f, 0x79, 0x7c, 0xe3, 0xbb, 0x9c, 0x7c,
	0x0d, 0x50, 0xf0, 0x8e, 0xd8, 0x85, 0xbe, 0x55, 0x3f, 0x81, 0x7b, 0x07, 0x2b, 0x22, 0x69, 0x05,
	0xba, 0xfb, 0xe3, 0x6f, 0xbf, 0xff, 0x62, 0x6e, 0x90, 0xce, 0xe0, 0xe6, 0xe3, 0x01, 0xd3, 0x48,
	0x2f, 0xa0, 0x9d, 0xcd, 0x44, 0xd2, 0x5d, 0x1a, 0x92, 0x29, 0x66, 0xdd, 0xf0, 0xa4, 0x3b, 0x88,
	0xd8, 0x21, 0x96, 0x42, 0xc4, 0x41, 0x4a, 0x1c, 0xb0, 0xf2, 0x69, 0x4c, 0x16, 0x17, 0x66, 0x8f,
	0xa4, 0x67, 0x2f, 0x07, 0x34, 0x24, 0x41, 0xc8, 0x3b, 0x04, 0x72, 0xc8, 0x84, 0x7c, 0x07, 0x1b,
	0x95, 0x69, 0x97, 0x6f, 0x74, 0x61, 0x62, 0xf7, 0x0e, 0x0b, 0xd8, 0xe5, 0xd9, 0x48, 0xbb, 0x08,
	0xbd, 0x4d, 0x36, 0x15, 0x74, 0x31, 0x01, 0xc9, 0x2b, 0x6c, 0xad, 0x9e, 0x80, 0xb5, 0xd8, 0xa5,
	0xc6, 0x2e, 0x0c, 0xcb, 0x6a, 0x63, 0x3d, 0x8d, 0xf3, 0x06, 0x3a, 0xa5, 0x19, 0x59, 0x0b, 0xdb,
	0x2b, 0x60, 0x17, 0xe7, 0x29, 0x3d, 0x40, 0xdc, 0x5d, 0xb2, 0xa3, 0x70, 0x43, 0xe1, 0xf1, 0xc1,
	0x35, 0xf7, 0x12, 0x84, 0x8b, 0x71, 0x0a, 0x69, 0xc1, 0x28, 0xcb, 0x50, 0x6d, 0xa1, 0xe3, 0x95,
	0x23, 0xb1, 0xe8, 0x4e, 0x1f, 0x8b, 0xf5, 0x88, 0xad, 0x8a, 0x95, 0xe7, 0xe3, 0x40, 0x8b, 0x15,
	0x79, 0x0b, 0x9b, 0xd5, 0xc5, 0xe4, 0xb0, 0x66, 0xcc, 0xa6, 0x15, 0x6f, 0x1f, 0xc2, 0x74, 0x1f,
	0x0b, 0xee, 0x90, 0xad, 0x85, 0x82, 0xe4, 0x87, 0xe5, 0x79, 0x8c, 0x6a, 0xff, 0x81, 0x72, 0xff,
	0xa9, 0x89, 0x56, 0x26, 0x05, 0x3d, 0xc1, 0xaa, 0x07, 0x64, 0x7f, 0xa1, 0xea, 0x20, 0xd6, 0x45,
	0x02, 0xd8, 0x5a, 0x10, 0x0e, 0x92, 0x1d, 0x64, 0xb5, 0x26, 0xe7, 0x9d, 0xad, 0xd1, 0x1b, 0xda,
	0xc3, 0x92, 0x7b, 0x74, 0xf1, 0xa0, 0x9f, 0x19, 0x0f, 0xc8, 0x37, 0x60, 0xe5, 0x5a, 0x92, 0x3f,
	0x97, 0x45, 0x25, 0xca, 0x9f, 0xcb, 0x92, 0xec, 0xd0, 0xbb, 0x88, 0xbd, 0x45, 0x36, 0x14, 0x76,
	0x92, 0x85, 0x1f, 0x19, 0xe4, 0x5b, 0xe8, 0x94, 0x54, 0xe6, 0x83, 0xf4, 0x5b, 0xa1, 0x48, 0xd5,
	0x0b, 0x9a, 0x60, 0x82, 0xab, 0x12, 0x46, 0xeb, 0xf8, 0x17, 0xfc, 0x93, 0xbf, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x63, 0x2c, 0xb7, 0xa5, 0xb4, 0x0f, 0x00, 0x00,
}
