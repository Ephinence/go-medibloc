syntax = "proto3";

package rpcpb;

import "google/api/annotations.proto";
import "github.com/medibloc/go-medibloc/core/pb/block.proto";

service ApiService {
	rpc GetAccountState (GetAccountStateRequest) returns (GetAccountStateResponse) {
		option (google.api.http) = {
			get: "/v1/user/accountstate"
		};
	}

    rpc GetBlock (GetBlockRequest) returns (GetBlockResponse) {
        option (google.api.http) = {
            get: "/v1/block"
        };
    }

	rpc GetMedState (NonParamsRequest) returns (GetMedStateResponse) {
		option (google.api.http) = {
			get: "/v1/user/medstate"
		};
	}

    rpc GetTailBlock (NonParamsRequest) returns (GetBlockResponse) {
        option (google.api.http) = {
            get: "/v1/block/tail"
        };
    }

	rpc PostTransaction (TransactionRequest) returns (TransactionResponse) {
		option (google.api.http) = {
          post: "/v1/transaction"
          body: "*"
      };
	}
}

service AdminService {
	rpc SendTransaction (TransactionRequest) returns (TransactionResponse) {
		option (google.api.http) = {
			post: "/v1/admin/transaction"
			body: "*"
		};
	}
}


message GetAccountStateRequest {
	// Hex string of the account addresss.
	string address = 1;
	// block account state with height. If not specified, use 0 as tail height.
	uint64 height = 2;
}

message GetAccountStateResponse {
	// Current balance in unit of 1/(10^18) nas.
	string balance = 1; // uint128, len=16
	// Current transaction count.
	uint64 nonce = 2;
	// Account type
	uint32 type = 3;
}

message GetBlockRequest {
    // Block hash
    string hash = 1;
}

message GetBlockResponse {
	// Block
    corepb.Block block = 1;
}

message NonParamsRequest {
}

message GetMedStateResponse {
	// Block chain id
	uint32 chain_id = 1;

	// Current tail block hash
	string tail = 2;

	// Current tail block height
	uint64 height = 3;

	// The current med protocol version.
	string protocol_version = 7;

	// Med version
	string version = 8;
}

message TransactionData {
	string type = 1;
	string payload = 2;
}

message TransactionRequest {
	// Transaction hash
	string hash = 1;
	// Hex string of the sender account addresss.
	string from = 2;
	// Hex string of the receiver account addresss.
	string to = 3;
	// Amount of value sending with this transaction.
	string value = 4; // uint128, len=16
	// Transaction timestamp.
	int64 timestamp = 5;
	// Transaction Data type.
	TransactionData data = 6;
	// Transaction nonce.
	uint64 nonce = 7;
	// Transaction chain ID.
	uint32 chain_id = 8;
	// Transaction algorithm.
	uint32 alg = 9;
	// Transaction sign.
	string sign = 10;
}

message TransactionResponse {
	// Hex string of transaction hash.
	string txhash = 1;
}
