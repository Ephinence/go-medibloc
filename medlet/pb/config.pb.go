// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

package medletpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Reporting modules.
type StatsConfig_ReportingModule int32

const (
	StatsConfig_Influxdb StatsConfig_ReportingModule = 0
)

var StatsConfig_ReportingModule_name = map[int32]string{
	0: "Influxdb",
}
var StatsConfig_ReportingModule_value = map[string]int32{
	"Influxdb": 0,
}

func (x StatsConfig_ReportingModule) String() string {
	return proto.EnumName(StatsConfig_ReportingModule_name, int32(x))
}
func (StatsConfig_ReportingModule) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{9, 0}
}

// Med global configurations.
type Config struct {
	// Global config
	Global *GlobalConfig `protobuf:"bytes,1,opt,name=global" json:"global,omitempty"`
	// Network config.
	Network *NetworkConfig `protobuf:"bytes,2,opt,name=network" json:"network,omitempty"`
	// Chain config.
	Chain *ChainConfig `protobuf:"bytes,3,opt,name=chain" json:"chain,omitempty"`
	// RPC config.
	Rpc *RPCConfig `protobuf:"bytes,4,opt,name=rpc" json:"rpc,omitempty"`
	// Stats config.
	Stats *StatsConfig `protobuf:"bytes,100,opt,name=stats" json:"stats,omitempty"`
	// Misc config.
	Misc *MiscConfig `protobuf:"bytes,101,opt,name=misc" json:"misc,omitempty"`
	// App Config.
	App *AppConfig `protobuf:"bytes,102,opt,name=app" json:"app,omitempty"`
	// Sync Service Config.
	Sync                 *SyncConfig `protobuf:"bytes,200,opt,name=sync" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetGlobal() *GlobalConfig {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Config) GetNetwork() *NetworkConfig {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Config) GetChain() *ChainConfig {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *Config) GetRpc() *RPCConfig {
	if m != nil {
		return m.Rpc
	}
	return nil
}

func (m *Config) GetStats() *StatsConfig {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Config) GetMisc() *MiscConfig {
	if m != nil {
		return m.Misc
	}
	return nil
}

func (m *Config) GetApp() *AppConfig {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Config) GetSync() *SyncConfig {
	if m != nil {
		return m.Sync
	}
	return nil
}

type GlobalConfig struct {
	// ChainID.
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Data dir.
	Datadir string `protobuf:"bytes,11,opt,name=datadir,proto3" json:"datadir,omitempty"`
	// Crypto algorithm
	CryptoAlg uint32 `protobuf:"varint,20,opt,name=crypto_alg,json=cryptoAlg,proto3" json:"crypto_alg,omitempty"`
	// Hash algorithm
	HashAlg              uint32   `protobuf:"varint,21,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalConfig) Reset()         { *m = GlobalConfig{} }
func (m *GlobalConfig) String() string { return proto.CompactTextString(m) }
func (*GlobalConfig) ProtoMessage()    {}
func (*GlobalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{1}
}
func (m *GlobalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalConfig.Unmarshal(m, b)
}
func (m *GlobalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalConfig.Marshal(b, m, deterministic)
}
func (dst *GlobalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalConfig.Merge(dst, src)
}
func (m *GlobalConfig) XXX_Size() int {
	return xxx_messageInfo_GlobalConfig.Size(m)
}
func (m *GlobalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalConfig proto.InternalMessageInfo

func (m *GlobalConfig) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GlobalConfig) GetDatadir() string {
	if m != nil {
		return m.Datadir
	}
	return ""
}

func (m *GlobalConfig) GetCryptoAlg() uint32 {
	if m != nil {
		return m.CryptoAlg
	}
	return 0
}

func (m *GlobalConfig) GetHashAlg() uint32 {
	if m != nil {
		return m.HashAlg
	}
	return 0
}

type NetworkConfig struct {
	// Med seed node address.
	Seed []string `protobuf:"bytes,1,rep,name=seed" json:"seed,omitempty"`
	// Listen addresses.
	Listen []string `protobuf:"bytes,2,rep,name=listen" json:"listen,omitempty"`
	// Network node privateKey address. If nil, generate a new node.
	PrivateKey string `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Network ID
	NetworkId uint32 `protobuf:"varint,4,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Rount table syncing interval - Millisecond
	RouteTableSyncLoopInterval uint32   `protobuf:"varint,5,opt,name=route_table_sync_loop_interval,json=routeTableSyncLoopInterval,proto3" json:"route_table_sync_loop_interval,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *NetworkConfig) Reset()         { *m = NetworkConfig{} }
func (m *NetworkConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkConfig) ProtoMessage()    {}
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{2}
}
func (m *NetworkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfig.Unmarshal(m, b)
}
func (m *NetworkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfig.Marshal(b, m, deterministic)
}
func (dst *NetworkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfig.Merge(dst, src)
}
func (m *NetworkConfig) XXX_Size() int {
	return xxx_messageInfo_NetworkConfig.Size(m)
}
func (m *NetworkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfig proto.InternalMessageInfo

func (m *NetworkConfig) GetSeed() []string {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *NetworkConfig) GetListen() []string {
	if m != nil {
		return m.Listen
	}
	return nil
}

func (m *NetworkConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *NetworkConfig) GetNetworkId() uint32 {
	if m != nil {
		return m.NetworkId
	}
	return 0
}

func (m *NetworkConfig) GetRouteTableSyncLoopInterval() uint32 {
	if m != nil {
		return m.RouteTableSyncLoopInterval
	}
	return 0
}

type ChainConfig struct {
	// genesis conf file path
	Genesis string `protobuf:"bytes,2,opt,name=genesis,proto3" json:"genesis,omitempty"`
	// Key dir.
	Keydir string `protobuf:"bytes,12,opt,name=keydir,proto3" json:"keydir,omitempty"`
	// start mine at launch
	StartMine bool `protobuf:"varint,20,opt,name=start_mine,json=startMine,proto3" json:"start_mine,omitempty"`
	// Supported signature cipher list. ["ECC_SECP256K1"]
	SignatureCiphers []string `protobuf:"bytes,24,rep,name=signature_ciphers,json=signatureCiphers" json:"signature_ciphers,omitempty"`
	// Block cache size
	BlockCacheSize uint32 `protobuf:"varint,25,opt,name=block_cache_size,json=blockCacheSize,proto3" json:"block_cache_size,omitempty"`
	// Tail cache size
	TailCacheSize uint32 `protobuf:"varint,26,opt,name=tail_cache_size,json=tailCacheSize,proto3" json:"tail_cache_size,omitempty"`
	// Blockpool size
	BlockPoolSize uint32 `protobuf:"varint,27,opt,name=block_pool_size,json=blockPoolSize,proto3" json:"block_pool_size,omitempty"`
	// Transaction pool size
	TransactionPoolSize uint32 `protobuf:"varint,28,opt,name=transaction_pool_size,json=transactionPoolSize,proto3" json:"transaction_pool_size,omitempty"`
	// TODO account manager
	// Proposer private key.
	Privkey string `protobuf:"bytes,29,opt,name=privkey,proto3" json:"privkey,omitempty"`
	// Proposer list for multi proposer
	Proposers            []*ProposerConfig `protobuf:"bytes,30,rep,name=proposers" json:"proposers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChainConfig) Reset()         { *m = ChainConfig{} }
func (m *ChainConfig) String() string { return proto.CompactTextString(m) }
func (*ChainConfig) ProtoMessage()    {}
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{3}
}
func (m *ChainConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainConfig.Unmarshal(m, b)
}
func (m *ChainConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainConfig.Marshal(b, m, deterministic)
}
func (dst *ChainConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainConfig.Merge(dst, src)
}
func (m *ChainConfig) XXX_Size() int {
	return xxx_messageInfo_ChainConfig.Size(m)
}
func (m *ChainConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ChainConfig proto.InternalMessageInfo

func (m *ChainConfig) GetGenesis() string {
	if m != nil {
		return m.Genesis
	}
	return ""
}

func (m *ChainConfig) GetKeydir() string {
	if m != nil {
		return m.Keydir
	}
	return ""
}

func (m *ChainConfig) GetStartMine() bool {
	if m != nil {
		return m.StartMine
	}
	return false
}

func (m *ChainConfig) GetSignatureCiphers() []string {
	if m != nil {
		return m.SignatureCiphers
	}
	return nil
}

func (m *ChainConfig) GetBlockCacheSize() uint32 {
	if m != nil {
		return m.BlockCacheSize
	}
	return 0
}

func (m *ChainConfig) GetTailCacheSize() uint32 {
	if m != nil {
		return m.TailCacheSize
	}
	return 0
}

func (m *ChainConfig) GetBlockPoolSize() uint32 {
	if m != nil {
		return m.BlockPoolSize
	}
	return 0
}

func (m *ChainConfig) GetTransactionPoolSize() uint32 {
	if m != nil {
		return m.TransactionPoolSize
	}
	return 0
}

func (m *ChainConfig) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *ChainConfig) GetProposers() []*ProposerConfig {
	if m != nil {
		return m.Proposers
	}
	return nil
}

type ProposerConfig struct {
	// Proposer.
	Proposer string `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// Proposer private key.
	Privkey string `protobuf:"bytes,2,opt,name=privkey,proto3" json:"privkey,omitempty"`
	// Coinbase.
	Coinbase string `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	// Key dir.
	Keydir string `protobuf:"bytes,11,opt,name=keydir,proto3" json:"keydir,omitempty"`
	// Passphrase.
	Passphrase           string   `protobuf:"bytes,12,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposerConfig) Reset()         { *m = ProposerConfig{} }
func (m *ProposerConfig) String() string { return proto.CompactTextString(m) }
func (*ProposerConfig) ProtoMessage()    {}
func (*ProposerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{4}
}
func (m *ProposerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposerConfig.Unmarshal(m, b)
}
func (m *ProposerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposerConfig.Marshal(b, m, deterministic)
}
func (dst *ProposerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposerConfig.Merge(dst, src)
}
func (m *ProposerConfig) XXX_Size() int {
	return xxx_messageInfo_ProposerConfig.Size(m)
}
func (m *ProposerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProposerConfig proto.InternalMessageInfo

func (m *ProposerConfig) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *ProposerConfig) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *ProposerConfig) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *ProposerConfig) GetKeydir() string {
	if m != nil {
		return m.Keydir
	}
	return ""
}

func (m *ProposerConfig) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type RPCConfig struct {
	// RPC listen addresses.
	RpcListen []string `protobuf:"bytes,1,rep,name=rpc_listen,json=rpcListen" json:"rpc_listen,omitempty"`
	// HTTP listen addresses.
	HttpListen []string `protobuf:"bytes,2,rep,name=http_listen,json=httpListen" json:"http_listen,omitempty"`
	// Enabled HTTP modules.["api", "admin"]
	HttpModule []string `protobuf:"bytes,3,rep,name=http_module,json=httpModule" json:"http_module,omitempty"`
	// Connection limit.
	ConnectionLimits     int32    `protobuf:"varint,4,opt,name=connection_limits,json=connectionLimits,proto3" json:"connection_limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPCConfig) Reset()         { *m = RPCConfig{} }
func (m *RPCConfig) String() string { return proto.CompactTextString(m) }
func (*RPCConfig) ProtoMessage()    {}
func (*RPCConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{5}
}
func (m *RPCConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCConfig.Unmarshal(m, b)
}
func (m *RPCConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCConfig.Marshal(b, m, deterministic)
}
func (dst *RPCConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCConfig.Merge(dst, src)
}
func (m *RPCConfig) XXX_Size() int {
	return xxx_messageInfo_RPCConfig.Size(m)
}
func (m *RPCConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RPCConfig proto.InternalMessageInfo

func (m *RPCConfig) GetRpcListen() []string {
	if m != nil {
		return m.RpcListen
	}
	return nil
}

func (m *RPCConfig) GetHttpListen() []string {
	if m != nil {
		return m.HttpListen
	}
	return nil
}

func (m *RPCConfig) GetHttpModule() []string {
	if m != nil {
		return m.HttpModule
	}
	return nil
}

func (m *RPCConfig) GetConnectionLimits() int32 {
	if m != nil {
		return m.ConnectionLimits
	}
	return 0
}

type AppConfig struct {
	// log level
	LogLevel string `protobuf:"bytes,1,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	// log file path
	LogFile string `protobuf:"bytes,2,opt,name=log_file,json=logFile,proto3" json:"log_file,omitempty"`
	// log file age, unit is s.
	LogAge uint32 `protobuf:"varint,3,opt,name=log_age,json=logAge,proto3" json:"log_age,omitempty"`
	// pprof config
	Pprof *PprofConfig `protobuf:"bytes,4,opt,name=pprof" json:"pprof,omitempty"`
	// App version
	Version              string   `protobuf:"bytes,100,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppConfig) Reset()         { *m = AppConfig{} }
func (m *AppConfig) String() string { return proto.CompactTextString(m) }
func (*AppConfig) ProtoMessage()    {}
func (*AppConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{6}
}
func (m *AppConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppConfig.Unmarshal(m, b)
}
func (m *AppConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppConfig.Marshal(b, m, deterministic)
}
func (dst *AppConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppConfig.Merge(dst, src)
}
func (m *AppConfig) XXX_Size() int {
	return xxx_messageInfo_AppConfig.Size(m)
}
func (m *AppConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AppConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AppConfig proto.InternalMessageInfo

func (m *AppConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *AppConfig) GetLogFile() string {
	if m != nil {
		return m.LogFile
	}
	return ""
}

func (m *AppConfig) GetLogAge() uint32 {
	if m != nil {
		return m.LogAge
	}
	return 0
}

func (m *AppConfig) GetPprof() *PprofConfig {
	if m != nil {
		return m.Pprof
	}
	return nil
}

func (m *AppConfig) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PprofConfig struct {
	// pprof listen address, if not configured, the function closes.
	HttpListen string `protobuf:"bytes,1,opt,name=http_listen,json=httpListen,proto3" json:"http_listen,omitempty"`
	// cpu profiling file, if not configured, the profiling not start
	Cpuprofile string `protobuf:"bytes,2,opt,name=cpuprofile,proto3" json:"cpuprofile,omitempty"`
	// memory profiling file, if not configured, the profiling not start
	Memprofile           string   `protobuf:"bytes,3,opt,name=memprofile,proto3" json:"memprofile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofConfig) Reset()         { *m = PprofConfig{} }
func (m *PprofConfig) String() string { return proto.CompactTextString(m) }
func (*PprofConfig) ProtoMessage()    {}
func (*PprofConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{7}
}
func (m *PprofConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofConfig.Unmarshal(m, b)
}
func (m *PprofConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofConfig.Marshal(b, m, deterministic)
}
func (dst *PprofConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofConfig.Merge(dst, src)
}
func (m *PprofConfig) XXX_Size() int {
	return xxx_messageInfo_PprofConfig.Size(m)
}
func (m *PprofConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PprofConfig proto.InternalMessageInfo

func (m *PprofConfig) GetHttpListen() string {
	if m != nil {
		return m.HttpListen
	}
	return ""
}

func (m *PprofConfig) GetCpuprofile() string {
	if m != nil {
		return m.Cpuprofile
	}
	return ""
}

func (m *PprofConfig) GetMemprofile() string {
	if m != nil {
		return m.Memprofile
	}
	return ""
}

type MiscConfig struct {
	// Default encryption ciper when create new keystore file.
	DefaultKeystoreFileCiper string   `protobuf:"bytes,1,opt,name=default_keystore_file_ciper,json=defaultKeystoreFileCiper,proto3" json:"default_keystore_file_ciper,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *MiscConfig) Reset()         { *m = MiscConfig{} }
func (m *MiscConfig) String() string { return proto.CompactTextString(m) }
func (*MiscConfig) ProtoMessage()    {}
func (*MiscConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{8}
}
func (m *MiscConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiscConfig.Unmarshal(m, b)
}
func (m *MiscConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiscConfig.Marshal(b, m, deterministic)
}
func (dst *MiscConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiscConfig.Merge(dst, src)
}
func (m *MiscConfig) XXX_Size() int {
	return xxx_messageInfo_MiscConfig.Size(m)
}
func (m *MiscConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MiscConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MiscConfig proto.InternalMessageInfo

func (m *MiscConfig) GetDefaultKeystoreFileCiper() string {
	if m != nil {
		return m.DefaultKeystoreFileCiper
	}
	return ""
}

type StatsConfig struct {
	// Enable metrics of not.
	EnableMetrics   bool                          `protobuf:"varint,1,opt,name=enable_metrics,json=enableMetrics,proto3" json:"enable_metrics,omitempty"`
	ReportingModule []StatsConfig_ReportingModule `protobuf:"varint,2,rep,packed,name=reporting_module,json=reportingModule,enum=medletpb.StatsConfig_ReportingModule" json:"reporting_module,omitempty"`
	// Influxdb config.
	Influxdb             *InfluxdbConfig `protobuf:"bytes,11,opt,name=influxdb" json:"influxdb,omitempty"`
	MetricsTags          []string        `protobuf:"bytes,12,rep,name=metrics_tags,json=metricsTags" json:"metrics_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatsConfig) Reset()         { *m = StatsConfig{} }
func (m *StatsConfig) String() string { return proto.CompactTextString(m) }
func (*StatsConfig) ProtoMessage()    {}
func (*StatsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{9}
}
func (m *StatsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsConfig.Unmarshal(m, b)
}
func (m *StatsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsConfig.Marshal(b, m, deterministic)
}
func (dst *StatsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsConfig.Merge(dst, src)
}
func (m *StatsConfig) XXX_Size() int {
	return xxx_messageInfo_StatsConfig.Size(m)
}
func (m *StatsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StatsConfig proto.InternalMessageInfo

func (m *StatsConfig) GetEnableMetrics() bool {
	if m != nil {
		return m.EnableMetrics
	}
	return false
}

func (m *StatsConfig) GetReportingModule() []StatsConfig_ReportingModule {
	if m != nil {
		return m.ReportingModule
	}
	return nil
}

func (m *StatsConfig) GetInfluxdb() *InfluxdbConfig {
	if m != nil {
		return m.Influxdb
	}
	return nil
}

func (m *StatsConfig) GetMetricsTags() []string {
	if m != nil {
		return m.MetricsTags
	}
	return nil
}

type InfluxdbConfig struct {
	// Host.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Port.
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Database name.
	Db string `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	// Auth user.
	User string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	// Auth password.
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfluxdbConfig) Reset()         { *m = InfluxdbConfig{} }
func (m *InfluxdbConfig) String() string { return proto.CompactTextString(m) }
func (*InfluxdbConfig) ProtoMessage()    {}
func (*InfluxdbConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{10}
}
func (m *InfluxdbConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfluxdbConfig.Unmarshal(m, b)
}
func (m *InfluxdbConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfluxdbConfig.Marshal(b, m, deterministic)
}
func (dst *InfluxdbConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfluxdbConfig.Merge(dst, src)
}
func (m *InfluxdbConfig) XXX_Size() int {
	return xxx_messageInfo_InfluxdbConfig.Size(m)
}
func (m *InfluxdbConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InfluxdbConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InfluxdbConfig proto.InternalMessageInfo

func (m *InfluxdbConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *InfluxdbConfig) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *InfluxdbConfig) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *InfluxdbConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *InfluxdbConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SyncConfig struct {
	// Minimum ChunkSize on seeding
	SeedingMinChunkSize uint64 `protobuf:"varint,1,opt,name=seeding_min_chunk_size,json=seedingMinChunkSize,proto3" json:"seeding_min_chunk_size,omitempty"`
	// Maximum ChunkSize on seeding
	SeedingMaxChunkSize uint64 `protobuf:"varint,2,opt,name=seeding_max_chunk_size,json=seedingMaxChunkSize,proto3" json:"seeding_max_chunk_size,omitempty"`
	// Maximum Number of Concurrent Peers on seeding
	SeedingMaxConcurrentPeers uint32 `protobuf:"varint,3,opt,name=seeding_max_concurrent_peers,json=seedingMaxConcurrentPeers,proto3" json:"seeding_max_concurrent_peers,omitempty"`
	// Size of Chunk on Downloading
	DownloadChunkSize uint64 `protobuf:"varint,4,opt,name=download_chunk_size,json=downloadChunkSize,proto3" json:"download_chunk_size,omitempty"`
	// Maximum Number of Concurrent DownloadTasks
	DownloadMaxConcurrentTasks uint32 `protobuf:"varint,5,opt,name=download_max_concurrent_tasks,json=downloadMaxConcurrentTasks,proto3" json:"download_max_concurrent_tasks,omitempty"`
	// Chunk Cache Size
	DownloadChunkCacheSize uint64 `protobuf:"varint,6,opt,name=download_chunk_cache_size,json=downloadChunkCacheSize,proto3" json:"download_chunk_cache_size,omitempty"`
	// Minimum Number of Peers to pass majority check
	MinimumPeers uint32 `protobuf:"varint,7,opt,name=minimum_peers,json=minimumPeers,proto3" json:"minimum_peers,omitempty"`
	// Blockchunk request interval - second
	RequestInterval uint32 `protobuf:"varint,10,opt,name=request_interval,json=requestInterval,proto3" json:"request_interval,omitempty"`
	// Timeout for finishing download  - second
	FinisherTimeout uint32 `protobuf:"varint,11,opt,name=finisher_timeout,json=finisherTimeout,proto3" json:"finisher_timeout,omitempty"`
	// Height gap to activate download
	SyncActivationHeight uint64   `protobuf:"varint,20,opt,name=sync_activation_height,json=syncActivationHeight,proto3" json:"sync_activation_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncConfig) Reset()         { *m = SyncConfig{} }
func (m *SyncConfig) String() string { return proto.CompactTextString(m) }
func (*SyncConfig) ProtoMessage()    {}
func (*SyncConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_b38a326081503983, []int{11}
}
func (m *SyncConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncConfig.Unmarshal(m, b)
}
func (m *SyncConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncConfig.Marshal(b, m, deterministic)
}
func (dst *SyncConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncConfig.Merge(dst, src)
}
func (m *SyncConfig) XXX_Size() int {
	return xxx_messageInfo_SyncConfig.Size(m)
}
func (m *SyncConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SyncConfig proto.InternalMessageInfo

func (m *SyncConfig) GetSeedingMinChunkSize() uint64 {
	if m != nil {
		return m.SeedingMinChunkSize
	}
	return 0
}

func (m *SyncConfig) GetSeedingMaxChunkSize() uint64 {
	if m != nil {
		return m.SeedingMaxChunkSize
	}
	return 0
}

func (m *SyncConfig) GetSeedingMaxConcurrentPeers() uint32 {
	if m != nil {
		return m.SeedingMaxConcurrentPeers
	}
	return 0
}

func (m *SyncConfig) GetDownloadChunkSize() uint64 {
	if m != nil {
		return m.DownloadChunkSize
	}
	return 0
}

func (m *SyncConfig) GetDownloadMaxConcurrentTasks() uint32 {
	if m != nil {
		return m.DownloadMaxConcurrentTasks
	}
	return 0
}

func (m *SyncConfig) GetDownloadChunkCacheSize() uint64 {
	if m != nil {
		return m.DownloadChunkCacheSize
	}
	return 0
}

func (m *SyncConfig) GetMinimumPeers() uint32 {
	if m != nil {
		return m.MinimumPeers
	}
	return 0
}

func (m *SyncConfig) GetRequestInterval() uint32 {
	if m != nil {
		return m.RequestInterval
	}
	return 0
}

func (m *SyncConfig) GetFinisherTimeout() uint32 {
	if m != nil {
		return m.FinisherTimeout
	}
	return 0
}

func (m *SyncConfig) GetSyncActivationHeight() uint64 {
	if m != nil {
		return m.SyncActivationHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "medletpb.Config")
	proto.RegisterType((*GlobalConfig)(nil), "medletpb.GlobalConfig")
	proto.RegisterType((*NetworkConfig)(nil), "medletpb.NetworkConfig")
	proto.RegisterType((*ChainConfig)(nil), "medletpb.ChainConfig")
	proto.RegisterType((*ProposerConfig)(nil), "medletpb.ProposerConfig")
	proto.RegisterType((*RPCConfig)(nil), "medletpb.RPCConfig")
	proto.RegisterType((*AppConfig)(nil), "medletpb.AppConfig")
	proto.RegisterType((*PprofConfig)(nil), "medletpb.PprofConfig")
	proto.RegisterType((*MiscConfig)(nil), "medletpb.MiscConfig")
	proto.RegisterType((*StatsConfig)(nil), "medletpb.StatsConfig")
	proto.RegisterType((*InfluxdbConfig)(nil), "medletpb.InfluxdbConfig")
	proto.RegisterType((*SyncConfig)(nil), "medletpb.SyncConfig")
	proto.RegisterEnum("medletpb.StatsConfig_ReportingModule", StatsConfig_ReportingModule_name, StatsConfig_ReportingModule_value)
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_b38a326081503983) }

var fileDescriptor_config_b38a326081503983 = []byte{
	// 1242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x56, 0x4f, 0x6f, 0x1b, 0xb7,
	0x12, 0x7f, 0x92, 0x65, 0x5b, 0x1a, 0x49, 0xb6, 0x43, 0x27, 0xce, 0xda, 0x49, 0x9c, 0x3c, 0x3d,
	0xe4, 0xc1, 0x41, 0x00, 0x03, 0xcf, 0x09, 0x1e, 0xd0, 0x43, 0x51, 0xb8, 0x06, 0xda, 0x1a, 0xb1,
	0x0b, 0x63, 0xe3, 0xfb, 0x82, 0xda, 0xa5, 0x57, 0x84, 0x57, 0x24, 0x4b, 0x52, 0x8e, 0x1d, 0xa0,
	0x40, 0xef, 0xbd, 0x17, 0x68, 0xaf, 0xfd, 0x20, 0xbd, 0xf6, 0xa3, 0xf4, 0x63, 0x14, 0x33, 0xcb,
	0xfd, 0x23, 0xa1, 0xb7, 0x9d, 0xdf, 0xfc, 0x66, 0x86, 0x9c, 0x19, 0xce, 0x2c, 0x8c, 0x52, 0xad,
	0x6e, 0x64, 0x7e, 0x6c, 0xac, 0xf6, 0x9a, 0xf5, 0xe7, 0x22, 0x2b, 0x84, 0x37, 0xd3, 0xc9, 0x5f,
	0x5d, 0xd8, 0x38, 0x23, 0x15, 0x3b, 0x86, 0x8d, 0xbc, 0xd0, 0x53, 0x5e, 0x44, 0x9d, 0x57, 0x9d,
	0xa3, 0xe1, 0xc9, 0xde, 0x71, 0xc5, 0x3a, 0xfe, 0x96, 0xf0, 0x92, 0x17, 0x07, 0x16, 0xfb, 0x1f,
	0x6c, 0x2a, 0xe1, 0x3f, 0x69, 0x7b, 0x1b, 0x75, 0xc9, 0xe0, 0x69, 0x63, 0xf0, 0x7d, 0xa9, 0x08,
	0x16, 0x15, 0x8f, 0xbd, 0x85, 0xf5, 0x74, 0xc6, 0xa5, 0x8a, 0xd6, 0xc8, 0xe0, 0x49, 0x63, 0x70,
	0x86, 0x70, 0xa0, 0x97, 0x1c, 0xf6, 0x1a, 0xd6, 0xac, 0x49, 0xa3, 0x1e, 0x51, 0x77, 0x1b, 0x6a,
	0x7c, 0x75, 0x16, 0x88, 0xa8, 0x47, 0x9f, 0xce, 0x73, 0xef, 0xa2, 0x6c, 0xd5, 0xe7, 0x47, 0x84,
	0x2b, 0x9f, 0xc4, 0x61, 0x47, 0xd0, 0x9b, 0x4b, 0x97, 0x46, 0x82, 0xb8, 0x8f, 0x1b, 0xee, 0xa5,
	0x74, 0x69, 0xa0, 0x12, 0x03, 0xa3, 0x73, 0x63, 0xa2, 0x9b, 0xd5, 0xe8, 0xa7, 0xc6, 0x54, 0xd1,
	0xb9, 0x31, 0xec, 0x0d, 0xf4, 0xdc, 0x83, 0x4a, 0xa3, 0x3f, 0x3b, 0xab, 0x1e, 0x3f, 0x3e, 0xa8,
	0xda, 0x23, 0x52, 0x26, 0x3f, 0xc2, 0xa8, 0x9d, 0x47, 0xb6, 0x0f, 0x7d, 0xba, 0x68, 0x22, 0x33,
	0xca, 0xf8, 0x38, 0xde, 0x24, 0xf9, 0x3c, 0x63, 0x11, 0x6c, 0x66, 0xdc, 0xf3, 0x4c, 0xda, 0x68,
	0xf8, 0xaa, 0x73, 0x34, 0x88, 0x2b, 0x91, 0xbd, 0x00, 0x48, 0xed, 0x83, 0xf1, 0x3a, 0xe1, 0x45,
	0x1e, 0x3d, 0x26, 0xb3, 0x41, 0x89, 0x9c, 0x16, 0xe4, 0x73, 0xc6, 0xdd, 0x8c, 0x94, 0x4f, 0x4a,
	0x9f, 0x28, 0x9f, 0x16, 0xf9, 0xe4, 0x8f, 0x0e, 0x8c, 0x97, 0xca, 0xc2, 0x18, 0xf4, 0x9c, 0x10,
	0x18, 0x7c, 0xed, 0x68, 0x10, 0xd3, 0x37, 0xdb, 0x83, 0x8d, 0x42, 0x3a, 0x2f, 0x54, 0xd4, 0x25,
	0x34, 0x48, 0xec, 0x25, 0x0c, 0x8d, 0x95, 0x77, 0xdc, 0x8b, 0xe4, 0x56, 0x3c, 0x50, 0xfd, 0x06,
	0x31, 0x04, 0xe8, 0x83, 0x78, 0xc0, 0x83, 0x85, 0x2a, 0xe3, 0x7d, 0x7a, 0xe5, 0xc1, 0x02, 0x72,
	0x9e, 0xb1, 0xaf, 0xe1, 0xd0, 0xea, 0x85, 0x17, 0x89, 0xe7, 0xd3, 0x42, 0x24, 0x98, 0x90, 0xa4,
	0xd0, 0xda, 0x24, 0x52, 0x79, 0x61, 0xef, 0x78, 0x11, 0xad, 0x93, 0xc9, 0x01, 0xb1, 0xae, 0x91,
	0x84, 0x09, 0xbc, 0xd0, 0xda, 0x9c, 0x07, 0xc6, 0xe4, 0xe7, 0x35, 0x18, 0xb6, 0xfa, 0x04, 0xb3,
	0x94, 0x0b, 0x25, 0x9c, 0x74, 0xd4, 0x80, 0x83, 0xb8, 0x12, 0xf1, 0x16, 0xb7, 0xe2, 0x01, 0xd3,
	0x37, 0x22, 0x45, 0x90, 0xf0, 0x90, 0xce, 0x73, 0xeb, 0x93, 0xb9, 0x54, 0x82, 0xb2, 0xd7, 0x8f,
	0x07, 0x84, 0x5c, 0x4a, 0x25, 0xd8, 0x5b, 0x78, 0xe4, 0x64, 0xae, 0xb8, 0x5f, 0x58, 0x91, 0xa4,
	0xd2, 0xcc, 0x84, 0x75, 0x51, 0x44, 0x79, 0xd8, 0xa9, 0x15, 0x67, 0x25, 0xce, 0x8e, 0x60, 0x67,
	0x5a, 0xe8, 0xf4, 0x36, 0x49, 0x79, 0x3a, 0x13, 0x89, 0x93, 0x9f, 0x45, 0xb4, 0x4f, 0x77, 0xd8,
	0x22, 0xfc, 0x0c, 0xe1, 0x8f, 0xf2, 0xb3, 0x60, 0xff, 0x85, 0x6d, 0xcf, 0x65, 0xd1, 0x26, 0x1e,
	0x10, 0x71, 0x8c, 0xf0, 0x12, 0xaf, 0xf4, 0x68, 0xb4, 0x2e, 0x4a, 0xde, 0xb3, 0x92, 0x47, 0xf0,
	0x95, 0xd6, 0x05, 0xf1, 0x4e, 0xe0, 0x89, 0xb7, 0x5c, 0x39, 0x9e, 0x7a, 0xa9, 0x55, 0x8b, 0xfd,
	0x9c, 0xd8, 0xbb, 0x2d, 0x65, 0x6d, 0x13, 0xc1, 0x26, 0x16, 0x0b, 0x6b, 0xf7, 0xa2, 0xcc, 0x55,
	0x10, 0xd9, 0xff, 0x61, 0x60, 0xac, 0x36, 0xda, 0xe1, 0x65, 0x0f, 0x5f, 0xad, 0x1d, 0x0d, 0x4f,
	0xa2, 0xa6, 0x8b, 0xaf, 0x82, 0x2a, 0x74, 0x72, 0x43, 0x9d, 0xfc, 0xd6, 0x81, 0xad, 0x65, 0x2d,
	0x3b, 0x80, 0x7e, 0xa5, 0xa7, 0x8e, 0x1e, 0xc4, 0xb5, 0xdc, 0x3e, 0x40, 0x77, 0xf9, 0x00, 0x07,
	0xd0, 0x4f, 0xb5, 0x54, 0x53, 0xee, 0x44, 0xe8, 0xab, 0x5a, 0x6e, 0x15, 0x72, 0xb8, 0x54, 0xc8,
	0x43, 0x00, 0xc3, 0x9d, 0x33, 0x33, 0x8b, 0x56, 0xa3, 0xd0, 0x8d, 0x35, 0x32, 0xf9, 0xb5, 0x03,
	0x83, 0x7a, 0x4e, 0x60, 0xd9, 0xad, 0x49, 0x93, 0xd0, 0xd8, 0x65, 0xbb, 0x0f, 0xac, 0x49, 0x2f,
	0xea, 0xde, 0x9e, 0x79, 0x6f, 0x92, 0xa5, 0xc6, 0x07, 0x84, 0x56, 0x08, 0x73, 0x9d, 0x2d, 0x0a,
	0x3c, 0x64, 0x4d, 0xb8, 0x24, 0x04, 0x1b, 0x27, 0xd5, 0x4a, 0x89, 0xb2, 0x20, 0x85, 0x9c, 0x4b,
	0xef, 0xe8, 0x0d, 0xac, 0xc7, 0x3b, 0x8d, 0xe2, 0x82, 0xf0, 0xc9, 0xef, 0x1d, 0x18, 0xd4, 0x53,
	0x84, 0x3d, 0x83, 0x41, 0xa1, 0xf3, 0xa4, 0x10, 0x77, 0xa2, 0xa8, 0x92, 0x56, 0xe8, 0xfc, 0x02,
	0x65, 0x7c, 0xce, 0xa8, 0xbc, 0x91, 0x85, 0xa8, 0xb2, 0x56, 0xe8, 0xfc, 0x1b, 0x59, 0x08, 0xf6,
	0x14, 0xf0, 0x33, 0xe1, 0x79, 0x99, 0xb4, 0x71, 0xbc, 0x51, 0xe8, 0xfc, 0x34, 0xc7, 0xb3, 0xac,
	0x1b, 0x63, 0xf5, 0x4d, 0x18, 0x9c, 0xad, 0x79, 0x78, 0x85, 0x70, 0x35, 0x0f, 0x89, 0x83, 0x55,
	0xb9, 0x13, 0xd6, 0x49, 0xad, 0x68, 0x7c, 0x0e, 0xe2, 0x4a, 0x9c, 0x28, 0x18, 0xb6, 0xf8, 0xab,
	0x39, 0x2a, 0x0f, 0xda, 0xce, 0xd1, 0x21, 0x40, 0x6a, 0x16, 0x68, 0xd1, 0x1c, 0xb6, 0x85, 0xa0,
	0x7e, 0x2e, 0xe6, 0x95, 0x3e, 0xcc, 0x8f, 0x06, 0x99, 0x7c, 0x00, 0x68, 0x66, 0x30, 0xfb, 0x12,
	0x9e, 0x65, 0xe2, 0x86, 0x2f, 0x0a, 0x8f, 0xe3, 0xc6, 0x79, 0x6d, 0x05, 0x65, 0x01, 0x5f, 0x65,
	0xdd, 0x5c, 0x51, 0xa0, 0x7c, 0x08, 0x0c, 0xcc, 0xcb, 0x19, 0xea, 0x27, 0x3f, 0x75, 0x61, 0xd8,
	0x9a, 0xfe, 0xec, 0x35, 0x6c, 0x09, 0x45, 0x83, 0x67, 0x2e, 0xbc, 0x95, 0xa9, 0x23, 0x0f, 0xfd,
	0x78, 0x5c, 0xa2, 0x97, 0x25, 0xc8, 0xae, 0x60, 0xc7, 0x0a, 0xa3, 0xad, 0x97, 0x2a, 0xaf, 0x8a,
	0x8d, 0xdd, 0xb0, 0x75, 0xf2, 0xfa, 0x1f, 0xb7, 0xca, 0x71, 0x5c, 0xb1, 0xcb, 0x3e, 0x88, 0xb7,
	0xed, 0x32, 0xc0, 0xde, 0x43, 0x5f, 0xaa, 0x9b, 0x62, 0x71, 0x9f, 0x4d, 0xa9, 0x83, 0x97, 0xde,
	0xd6, 0x79, 0xd0, 0x84, 0x92, 0xd4, 0x4c, 0xf6, 0x6f, 0x18, 0x85, 0x73, 0x26, 0x9e, 0xe7, 0x2e,
	0x1a, 0x51, 0xc3, 0x0d, 0x03, 0x76, 0xcd, 0x73, 0x37, 0x79, 0x09, 0xdb, 0x2b, 0xc1, 0xd9, 0x08,
	0xfa, 0x95, 0xc7, 0x9d, 0x7f, 0x4d, 0xee, 0x61, 0x6b, 0xd9, 0x3f, 0x8e, 0xfb, 0x99, 0x76, 0x3e,
	0x24, 0x8f, 0xbe, 0x11, 0x43, 0x27, 0x54, 0xaf, 0x71, 0x4c, 0xdf, 0x6c, 0x0b, 0xba, 0xd9, 0x34,
	0x54, 0xa8, 0x9b, 0x4d, 0x91, 0xb3, 0xc0, 0x17, 0xdd, 0x2b, 0xed, 0xf0, 0x9b, 0x5e, 0x3a, 0x77,
	0xee, 0x93, 0xb6, 0x19, 0x0d, 0x6e, 0x7c, 0xe9, 0x41, 0x9e, 0xfc, 0xd2, 0x03, 0x68, 0x96, 0x1f,
	0x7b, 0x07, 0x7b, 0xb8, 0x59, 0x28, 0xa5, 0x52, 0x25, 0xe9, 0x6c, 0xa1, 0x6e, 0xcb, 0x71, 0x85,
	0x07, 0xe9, 0xc5, 0xbb, 0x41, 0x7b, 0x29, 0xd5, 0x19, 0xea, 0x68, 0x5c, 0xb5, 0x8d, 0xf8, 0x7d,
	0xdb, 0xa8, 0xbb, 0x6c, 0xc4, 0xef, 0x1b, 0xa3, 0xaf, 0xe0, 0xf9, 0x92, 0x91, 0x56, 0xe9, 0xc2,
	0x5a, 0xa1, 0x7c, 0x62, 0x04, 0x0e, 0xb7, 0xf2, 0x9d, 0xec, 0xb7, 0x4c, 0x6b, 0xc6, 0x15, 0x12,
	0xd8, 0x31, 0xec, 0x66, 0xfa, 0x93, 0x2a, 0x34, 0xcf, 0xda, 0x21, 0x7b, 0x14, 0xf2, 0x51, 0xa5,
	0x6a, 0x02, 0x9e, 0xc2, 0x8b, 0x9a, 0xbf, 0x12, 0xd1, 0x73, 0x77, 0xeb, 0xaa, 0x9d, 0x56, 0x91,
	0x96, 0x42, 0x5e, 0x23, 0x83, 0x7d, 0x01, 0xfb, 0x2b, 0x21, 0x5b, 0x5b, 0x62, 0x83, 0x02, 0xef,
	0x2d, 0x05, 0x6e, 0xd6, 0xc5, 0x7f, 0x60, 0x3c, 0x97, 0x4a, 0xce, 0x17, 0xf3, 0x70, 0xbf, 0x4d,
	0x8a, 0x36, 0x0a, 0x60, 0x79, 0xa5, 0x37, 0xd8, 0xd2, 0x3f, 0x2c, 0x84, 0xf3, 0xcd, 0xa6, 0x05,
	0xe2, 0x6d, 0x07, 0xbc, 0x5a, 0xaf, 0x48, 0xbd, 0x91, 0x4a, 0xba, 0x99, 0xb0, 0x89, 0x97, 0x73,
	0xa1, 0x17, 0x9e, 0x7a, 0x76, 0x1c, 0x6f, 0x57, 0xf8, 0x75, 0x09, 0xb3, 0xf7, 0xb0, 0x47, 0x1b,
	0x1c, 0x97, 0xcc, 0x1d, 0xa7, 0xa1, 0x37, 0x13, 0x32, 0x9f, 0x79, 0xda, 0xa9, 0xbd, 0xf8, 0x31,
	0x6a, 0x4f, 0x6b, 0xe5, 0x77, 0xa4, 0x9b, 0x6e, 0xd0, 0xcf, 0xe7, 0xbb, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0xdc, 0x90, 0xbd, 0x8c, 0x0a, 0x00, 0x00,
}
