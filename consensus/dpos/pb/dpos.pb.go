// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dpos.proto

/*
Package dpospb is a generated protocol buffer package.

It is generated from these files:
	dpos.proto

It has these top-level messages:
	State
	Candidate
	Dynasty
*/
package dpospb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type State struct {
	CandidateRootHash []byte `protobuf:"bytes,1,opt,name=candidate_root_hash,json=candidateRootHash,proto3" json:"candidate_root_hash,omitempty"`
	DynastyRootHash   []byte `protobuf:"bytes,2,opt,name=dynasty_root_hash,json=dynastyRootHash,proto3" json:"dynasty_root_hash,omitempty"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptorDpos, []int{0} }

func (m *State) GetCandidateRootHash() []byte {
	if m != nil {
		return m.CandidateRootHash
	}
	return nil
}

func (m *State) GetDynastyRootHash() []byte {
	if m != nil {
		return m.DynastyRootHash
	}
	return nil
}

type Candidate struct {
	Address   []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Collatral []byte `protobuf:"bytes,2,opt,name=collatral,proto3" json:"collatral,omitempty"`
	VotePower []byte `protobuf:"bytes,3,opt,name=vote_power,json=votePower,proto3" json:"vote_power,omitempty"`
}

func (m *Candidate) Reset()                    { *m = Candidate{} }
func (m *Candidate) String() string            { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()               {}
func (*Candidate) Descriptor() ([]byte, []int) { return fileDescriptorDpos, []int{1} }

func (m *Candidate) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Candidate) GetCollatral() []byte {
	if m != nil {
		return m.Collatral
	}
	return nil
}

func (m *Candidate) GetVotePower() []byte {
	if m != nil {
		return m.VotePower
	}
	return nil
}

type Dynasty struct {
	BlockProducers [][]byte `protobuf:"bytes,1,rep,name=block_producers,json=blockProducers" json:"block_producers,omitempty"`
}

func (m *Dynasty) Reset()                    { *m = Dynasty{} }
func (m *Dynasty) String() string            { return proto.CompactTextString(m) }
func (*Dynasty) ProtoMessage()               {}
func (*Dynasty) Descriptor() ([]byte, []int) { return fileDescriptorDpos, []int{2} }

func (m *Dynasty) GetBlockProducers() [][]byte {
	if m != nil {
		return m.BlockProducers
	}
	return nil
}

func init() {
	proto.RegisterType((*State)(nil), "dpospb.State")
	proto.RegisterType((*Candidate)(nil), "dpospb.Candidate")
	proto.RegisterType((*Dynasty)(nil), "dpospb.Dynasty")
}

func init() { proto.RegisterFile("dpos.proto", fileDescriptorDpos) }

var fileDescriptorDpos = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0xb9, 0x5e, 0xbc, 0x97, 0x0e, 0xc5, 0xd2, 0xb8, 0xe9, 0x42, 0x41, 0xba, 0xb1, 0xb8,
	0xe8, 0x42, 0x1f, 0x41, 0x17, 0x2e, 0x4b, 0x7d, 0x80, 0x30, 0xf9, 0x81, 0x8a, 0xa1, 0x13, 0x92,
	0x51, 0xe9, 0xdb, 0x4b, 0xda, 0x46, 0xdd, 0x25, 0xdf, 0x39, 0x7c, 0x07, 0x06, 0xc0, 0x78, 0x8a,
	0xbd, 0x0f, 0xc4, 0x24, 0x4e, 0xe9, 0xed, 0x55, 0xab, 0xe1, 0xf2, 0x8d, 0x91, 0xad, 0xe8, 0xe1,
	0x5a, 0xe3, 0x6c, 0xde, 0x0d, 0xb2, 0x95, 0x81, 0x88, 0xe5, 0x84, 0x71, 0x6a, 0x0e, 0x77, 0x87,
	0xae, 0x1c, 0xeb, 0xdf, 0x68, 0x24, 0xe2, 0x57, 0x8c, 0x93, 0x78, 0x80, 0xda, 0x2c, 0x33, 0x46,
	0x5e, 0xfe, 0xb5, 0x2f, 0xd6, 0x76, 0xb5, 0x07, 0xb9, 0xdb, 0x2a, 0x28, 0x9e, 0xb3, 0x40, 0x34,
	0x70, 0x46, 0x63, 0x82, 0x8d, 0x71, 0x97, 0xe7, 0xaf, 0xb8, 0x81, 0x42, 0x93, 0x73, 0xc8, 0x01,
	0xdd, 0xae, 0xfa, 0x03, 0xe2, 0x16, 0xe0, 0x8b, 0xd8, 0x4a, 0x4f, 0xdf, 0x36, 0x34, 0xc7, 0x2d,
	0x4e, 0x64, 0x48, 0xa0, 0x7d, 0x84, 0xf3, 0xcb, 0x36, 0x2b, 0xee, 0xa1, 0x52, 0x8e, 0xf4, 0x87,
	0xf4, 0x81, 0xcc, 0xa7, 0xb6, 0x21, 0x2d, 0x1d, 0xbb, 0x72, 0xbc, 0x5a, 0xf1, 0x90, 0xa9, 0x3a,
	0xad, 0xb7, 0x78, 0xfa, 0x09, 0x00, 0x00, 0xff, 0xff, 0x07, 0x69, 0xa0, 0x10, 0x19, 0x01, 0x00,
	0x00,
}
